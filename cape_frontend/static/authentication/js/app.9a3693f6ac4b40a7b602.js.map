{"version":3,"sources":["webpack:///authentication/js/app.9a3693f6ac4b40a7b602.js","webpack:///./src/Authentication.vue?5bdd","webpack:///./src/configuration.js","webpack:///./src/client.js","webpack:///src/Authentication.vue","webpack:///src/components/Register.vue","webpack:///./src/main.js","webpack:///./src/components/Register.vue?9153","webpack:///./src/components/Login.vue?f327","webpack:///./src/router/index.js","webpack:///./src/components/Register.vue?75af","webpack:///./src/components/Recover.vue","webpack:///./src/Authentication.vue?2357","webpack:///src/components/Login.vue","webpack:///./src/components/Recover.vue?5d80","webpack:///./src/redirect.js","webpack:///../cape-client/dist/cape.js","webpack:///./src/components/Login.vue?f420"],"names":["webpackJsonp","+ulw","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Authentication_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1b637f9b_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Authentication_vue__","normalizeComponent","__vue_styles__","Component","/1Ne","__WEBPACK_IMPORTED_MODULE_0_lodash__","__WEBPACK_IMPORTED_MODULE_0_lodash___default","n","__WEBPACK_IMPORTED_MODULE_1_urijs__","__WEBPACK_IMPORTED_MODULE_1_urijs___default","__WEBPACK_IMPORTED_MODULE_2_JSON__","__WEBPACK_IMPORTED_MODULE_2_JSON___default","uri","a","query","search","runtime","has","parse","configuration","e","defaults","api","authentication","logo","url","stringify","login","redirectURL","register","oauth","error","success","2Eh+","__WEBPACK_IMPORTED_MODULE_0__cape_client_dist_cape_js__","__WEBPACK_IMPORTED_MODULE_0__cape_client_dist_cape_js___default","__WEBPACK_IMPORTED_MODULE_1__configuration__","client","6+Ty","__WEBPACK_IMPORTED_MODULE_1__configuration_js__","computed","logoURL","value","7fgN","exports","7hGW","JJT7","__WEBPACK_IMPORTED_MODULE_1__client_js__","__WEBPACK_IMPORTED_MODULE_2__configuration_js__","data","OAUTH_ERROR","password","superadmintoken","progress","redirect","hasOAuthError","this","$route","params","methods","submit","username","bind","message","window","location","href","social","option","successRedirectURL","errorRedirectURL","platform","facebook","google","NHnr","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1__Authentication__","__WEBPACK_IMPORTED_MODULE_3__router__","config","productionTip","el","router","template","components","cape-authentication","Rhhe","V0aP","W45A","render","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","_s","_e","directives","name","rawName","expression","attrs","type","placeholder","domProps","on","input","$event","target","composing","keyup","_k","keyCode","key","disabled","click","aria-hidden","staticRenderFns","esExports","WIS8","Xais","YaEn","__WEBPACK_IMPORTED_MODULE_1_vue_router__","__WEBPACK_IMPORTED_MODULE_2__components_Login__","__WEBPACK_IMPORTED_MODULE_3__components_Recover__","__WEBPACK_IMPORTED_MODULE_4__components_Register__","use","routes","alias","path","component","dIqY","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Register_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ea2a2240_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Register_vue__","exX0","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Recover_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Recover_vue___default","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_620fbf7f_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Recover_vue__","kPZ4","lQSc","nKb+","uj/z","ujoT","__WEBPACK_IMPORTED_MODULE_1__client__","__WEBPACK_IMPORTED_MODULE_2__configuration__","__WEBPACK_IMPORTED_MODULE_3_urijs__","__WEBPACK_IMPORTED_MODULE_3_urijs___default","user","token","get","redirect_uri","account_linking_token","woyk","root","factory","self","modules","moduleId","installedModules","i","l","call","m","c","d","getter","o","configurable","enumerable","__esModule","object","property","prototype","hasOwnProperty","p","s","isArray","val","toString","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isObject","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","URLSearchParams","trim","str","replace","isStandardBrowserEnv","navigator","product","document","forEach","obj","fn","length","merge","assignValue","result","arguments","extend","b","thisArg","isBuffer","global","__WEBPACK_AMD_DEFINE_RESULT__","apply","func","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","split","asciiWords","match","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","undefined","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","test","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","next","done","push","mapToArray","map","size","overArg","transform","arg","replaceHolders","PLACEHOLDER","safeGet","setToArray","set","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsLower","rsMisc","rsFitz","rsRegional","rsSurrPair","rsUpper","rsMiscLower","reOptMod","rsModifier","rsOptJoin","join","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","rsMiscUpper","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","nodeIsArrayBuffer","nodeIsDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","_","runInContext","context","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","add","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isType","skipIndexes","String","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAssignIn","keysIn","writable","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","subValue","keysFunc","getAllKeysIn","getAllKeys","baseConforms","baseConformsTo","baseDelay","wait","TypeError","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","slice","allocUnsafe","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneRegExp","regexp","exec","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","Ctor","isBind","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","Math","precision","pair","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","convert","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","timeWaiting","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNative","isMaskable","Error","isNull","isNil","proto","objectCtorString","isSafeInteger","isWeakMap","isWeakSet","symIterator","remainder","valueOf","isBinary","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","toLowerCase","endsWith","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trimEnd","trimStart","truncate","omission","substring","newEnd","unescape","pattern","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","id","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","pick","Date","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","resolve","ctorString","charCodeAt","quote","subString","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extendWith","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","ClientError","instance","setPrototypeOf","__proto__","fromObject","fields","library","timeout","unknown","failedConnection","malformedResponse","notFound","server","default","_configuration","logout","plan","profile","threshold","forwardEmail","admin","terms","agree","onboarding","complete","statistics","inbox","paginate","markAsRead","archive","reply","read","delete","scrape","question","paraphrase","canonical","answer","annotation","log","event","_interopRequireDefault","_classCallCheck","Constructor","_createClass","defineProperties","descriptor","protoProps","staticProps","_lodash","_lodash2","_Error","_Error2","Resource","model","_client","_model","parameters","headers","adminToken","_axios","request","withCredentials","then","response","catch","code","setContentTypeIfUnset","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","adapter","XMLHttpRequest","transformRequest","JSON","transformResponse","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","len","run","Item","nextTick","title","browser","env","argv","version","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","cwd","chdir","umask","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","requestData","requestHeaders","loadEvent","xDomain","NODE_ENV","XDomainRequest","onprogress","ontimeout","auth","Authorization","open","paramsSerializer","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","statusText","onerror","cookies","xsrfValue","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","abort","send","enhanceError","__CANCEL__","Cancel","backend","frontend","mock","full","unlucky","_axios2","_configuration2","_constants","constants","newObj","_Authentication","_Authentication2","_Document","_Document2","_Inbox","_Inbox2","_Query","_Query2","_Reply","_Reply2","_User","_User2","_Annotation","_Annotation2","_Log","_Log2","resources","defaultConfiguration","backendURL","Client","_setupResources","baseURL","g","eval","webpackPolyfill","deprecate","children","createInstance","defaultConfig","Axios","axios","instanceConfig","CancelToken","isCancel","all","promises","isSlowBuffer","readFloatLE","_isBuffer","interceptors","InterceptorManager","dispatchRequest","isAbsoluteURL","combineURLs","unshift","fulfilled","rejected","shift","normalizedName","encode","encodeURIComponent","serializedParams","parts","v","toISOString","parsed","line","substr","resolveURL","msie","urlParsingNode","setAttribute","protocol","host","hostname","port","pathname","originURL","userAgent","createElement","requestURL","E","block","charCode","output","idx","write","expires","domain","secure","cookie","toGMTString","decodeURIComponent","handlers","eject","h","throwIfCancellationRequested","throwIfRequested","transformData","reason","fns","relativeURL","executor","resolvePromise","arr","THRESHOLD_VERY_LOW","THRESHOLD_LOW","THRESHOLD_MEDIUM","THRESHOLD_HIGH","THRESHOLD_VERY_HIGH","SOURCE_ALL","SOURCE_REPLY","SOURCE_DOCUMENT","MODE_BALANCED","MODE_SPEED","MODE_ACCURATE","PLAN_FREE","PLAN_BASIC","PLAN_PRO","_defineProperty","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","_map","_map2","_Resource3","_Resource4","Platform","_Resource","_fieldToInputNameMap","form","fieldToInputNameMap","inputName","inputValue","appendChild","body","_fieldToInputNameMap2","Authentication","_Resource2","_this2","_setupPlatform","_this3","userId","superAdminToken","_request","Document","_$defaults","searchTerm","numberOfItems","documentId","origin","text","formData","append","file","documentIds","items","totalItems","Inbox","answered","inboxId","Launcher","_this","_fields","content","documentIDs","sourceType","speedOrAccuracy","mode","Query","_Resource5","Question","replyId","replyID","questionId","interests","interest","found","Answer","answerId","Reply","_setupQuestion","_setupAnswer","_this4","savedReplyIds","_Resource10","_Resource11","Profile","Threshold","ForwardEmail","email","Token","Plan","Terms","_Resource6","termsAgreed","Onboarding","_Resource7","onboardingCompleted","Statistics","_Resource8","User","_Resource9","_this9","_setupProfile","_setupThreshold","_setupForwardEmail","_setupToken","_setupPlan","_setupTerms","_setupOnboarding","_setupStatistics","_this10","annotationId","annotationID","Annotation","annotationIds","annotationIDs","documentID","startOffset","endOffset","page","boundingBoxes","metadata","Log","xJsL","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Login_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49d6518c_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Login_vue__"],"mappings":"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AAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAA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AAq0B,aACAr0B,EAAAif,aACAjf,EAAAgoB,aACAhoB,EAAAioB,eACAjoB,EAAA6xB,WACA7xB,EAAAmf,WACAnf,EAAA0wB,gBACA1wB,EAAA4wB,kBACA5wB,EAAA6wB,oBACA7wB,EAAAqzB,UACArzB,EAAAszB,YACAtzB,EAAA8xB,aACA9xB,EAAA/c,YACA+c,EAAA+xB,SACA/xB,EAAAoG,QACApG,EAAAsG,UACAtG,EAAApY,OACAoY,EAAAkoB,WACAloB,EAAAmoB,aACAnoB,EAAAmsB,WACAnsB,EAAAosB,mBACApsB,EAAA6kB,WACA7kB,EAAA/d,SACA+d,EAAAozB,aACApzB,EAAAs0B,UACAt0B,EAAAu0B,YACAv0B,EAAAqsB,SACArsB,EAAAyiB,UACAziB,EAAA0sB,UACA1sB,EAAAwzB,QACAxzB,EAAAooB,UACApoB,EAAAilB,QACAjlB,EAAAqiB,WACAriB,EAAAw0B,QACAx0B,EAAAqyB,YACAryB,EAAAy0B,aACAz0B,EAAA00B,YACA10B,EAAAulB,WACAvlB,EAAAuyB,gBACAvyB,EAAAgyB,aACAhyB,EAAA+tB,QACA/tB,EAAAqoB,UACAroB,EAAArgB,YACAqgB,EAAA2sB,cACA3sB,EAAA8wB,QACA9wB,EAAAwf,WACAxf,EAAAyf,aACAzf,EAAA0f,eACA1f,EAAA+wB,UACA/wB,EAAA20B,SACA30B,EAAA40B,cACA50B,EAAAwyB,SACAxyB,EAAAwiB,UACAxiB,EAAA2f,UACA3f,EAAAklB,QACAllB,EAAAwY,WACAxY,EAAA2iB,cACA3iB,EAAA3X,OACA2X,EAAAuoB,WACAvoB,EAAA4iB,WACA5iB,EAAAyT,SACAzT,EAAAiyB,UACAjyB,EAAAmgB,cACAngB,EAAAogB,gBACApgB,EAAAvb,SACAub,EAAAmlB,UACAnlB,EAAAqgB,QACArgB,EAAAsgB,QACAtgB,EAAAugB,aACAvgB,EAAAwgB,kBACAxgB,EAAAygB,aACAzgB,EAAAmhB,OACAnhB,EAAAolB,YACAplB,EAAAuY,QACAvY,EAAAwhB,WACAxhB,EAAAyzB,WACAzzB,EAAA0zB,aAC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","file":"authentication/js/app.9a3693f6ac4b40a7b602.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"+ulw\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Authentication_vue__ = __webpack_require__(\"6+Ty\");\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1b637f9b_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Authentication_vue__ = __webpack_require__(\"lQSc\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"kPZ4\")\n  __webpack_require__(\"WIS8\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1b637f9b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Authentication_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1b637f9b_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Authentication_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"/1Ne\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(\"M4fF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_urijs__ = __webpack_require__(\"hBlz\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_urijs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_urijs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_JSON__ = __webpack_require__(\"pyBR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_JSON___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_JSON__);\n\n\n\n\n// import globalConfiguration from '../../configuration'\n\n// Parse url\nvar uri = new __WEBPACK_IMPORTED_MODULE_1_urijs___default.a();\nvar query = uri.search(true);\n\n// Runtime configuration passed\n// as query string param.\n// JSON is expected.\nvar runtime = '';\nif (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.has(query, 'configuration')) {\n  try {\n    runtime = __WEBPACK_IMPORTED_MODULE_2_JSON___default.a.parse(query.configuration);\n  } catch (e) {}\n}\n\n// Configuration object\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.defaults(runtime, {\n  api: null, // use \"cape-client\" default configuration\n  authentication: {\n    logo: {\n      url: '/?configuration=' + __WEBPACK_IMPORTED_MODULE_2_JSON___default.a.stringify(runtime)\n    },\n    login: {\n      redirectURL: '/dashboard.html?configuration=' + __WEBPACK_IMPORTED_MODULE_2_JSON___default.a.stringify(runtime)\n    },\n    register: {\n      redirectURL: '/authentication.html?configuration=' + __WEBPACK_IMPORTED_MODULE_2_JSON___default.a.stringify(runtime)\n    },\n    oauth: {\n      error: {\n        redirectURL: '/authentication.html#/login/error?configuration=' + __WEBPACK_IMPORTED_MODULE_2_JSON___default.a.stringify(runtime)\n      },\n      success: {\n        redirectURL: '/dashboard.html?configuration=' + __WEBPACK_IMPORTED_MODULE_2_JSON___default.a.stringify(runtime)\n      }\n    }\n  }\n}));\n\n/***/ }),\n\n/***/ \"2Eh+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cape_client_dist_cape_js__ = __webpack_require__(\"woyk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cape_client_dist_cape_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__cape_client_dist_cape_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__configuration__ = __webpack_require__(\"/1Ne\");\n\n\n\nvar client = new __WEBPACK_IMPORTED_MODULE_0__cape_client_dist_cape_js___default.a(__WEBPACK_IMPORTED_MODULE_1__configuration__[\"a\" /* default */].api);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (client);\n\n/***/ }),\n\n/***/ \"6+Ty\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(\"M4fF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__configuration_js__ = __webpack_require__(\"/1Ne\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\n  computed: {\n    logoURL: function logoURL() {\n      var value = '#';\n      if (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.has(__WEBPACK_IMPORTED_MODULE_1__configuration_js__[\"a\" /* default */], 'authentication.logo.url')) {\n        value = __WEBPACK_IMPORTED_MODULE_1__configuration_js__[\"a\" /* default */].authentication.logo.url;\n      }\n      return value;\n    }\n  }\n\n});\n\n/***/ }),\n\n/***/ \"7fgN\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"7hGW\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"JJT7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(\"M4fF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__client_js__ = __webpack_require__(\"2Eh+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__configuration_js__ = __webpack_require__(\"/1Ne\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\nvar OAUTH_ERROR = 'We were unable to create your account.';\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\n  data: function data() {\n    return {\n      OAUTH_ERROR: OAUTH_ERROR,\n      register: '',\n      password: '',\n      superadmintoken: '',\n      progress: false,\n      error: '',\n      redirect: false\n    };\n  },\n\n  computed: {\n    hasOAuthError: function hasOAuthError() {\n      if (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.has(this.$route, 'params.error')) {\n        return this.$route.params.error;\n      }\n      return false;\n    }\n  },\n\n  methods: {\n    submit: function submit() {\n      __WEBPACK_IMPORTED_MODULE_1__client_js__[\"a\" /* default */].authentication.register({\n        username: this.register,\n        password: this.password,\n        superadmintoken: this.superadmintoken\n      }, __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.bind(function (error, data) {\n        this.progress = false;\n        if (error) {\n          this.error = error.message;\n          return;\n        }\n        this.redirect = true;\n        if (__WEBPACK_IMPORTED_MODULE_2__configuration_js__[\"a\" /* default */].authentication.register.redirectURL) {\n          window.location.href = __WEBPACK_IMPORTED_MODULE_2__configuration_js__[\"a\" /* default */].authentication.register.redirectURL;\n        }\n      }, this));\n      this.progress = true;\n      this.error = '';\n      this.redirect = false;\n    },\n    social: function social(option) {\n      var successRedirectURL = __WEBPACK_IMPORTED_MODULE_2__configuration_js__[\"a\" /* default */].authentication.oauth.success.redirectURL;\n      var errorRedirectURL = __WEBPACK_IMPORTED_MODULE_2__configuration_js__[\"a\" /* default */].authentication.oauth.error.redirectURL;\n      if (!(successRedirectURL && errorRedirectURL)) {\n        return;\n      }\n      switch (option) {\n        case 'facebook':\n          __WEBPACK_IMPORTED_MODULE_1__client_js__[\"a\" /* default */].authentication.platform.facebook.login({\n            successRedirectURL: successRedirectURL,\n            errorRedirectURL: errorRedirectURL\n          });\n          break;\n        case 'google':\n          __WEBPACK_IMPORTED_MODULE_1__client_js__[\"a\" /* default */].authentication.platform.google.login({\n            successRedirectURL: successRedirectURL,\n            errorRedirectURL: errorRedirectURL\n          });\n          break;\n      }\n    },\n\n    api: function api() {\n      return __WEBPACK_IMPORTED_MODULE_1__client_js__[\"a\" /* default */];\n    }\n  }\n\n});\n\n/***/ }),\n\n/***/ \"NHnr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(\"7+uW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Authentication__ = __webpack_require__(\"+ulw\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__redirect__ = __webpack_require__(\"ujoT\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__router__ = __webpack_require__(\"YaEn\");\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].config.productionTip = false;\n\n/* eslint-disable no-new */\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n  el: '#authentication',\n  router: __WEBPACK_IMPORTED_MODULE_3__router__[\"a\" /* default */],\n  template: '<cape-authentication/>',\n  components: {\n    'cape-authentication': __WEBPACK_IMPORTED_MODULE_1__Authentication__[\"a\" /* default */]\n  }\n});\n\n/***/ }),\n\n/***/ \"Rhhe\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"V0aP\":\n/***/ (function(module, exports) {\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/***/ }),\n\n/***/ \"W45A\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cape-authentication-register\"},[_c('div',{staticClass:\"panel\"},[_c('div',{staticClass:\"panel-inner\"},[_vm._m(0),_vm._v(\" \"),(_vm.hasOAuthError)?[_c('div',{staticClass:\"alert alert-danger text-center\"},[_vm._v(\"\\n          \"+_vm._s(_vm.OAUTH_ERROR)+\"\\n        \")])]:_vm._e(),_vm._v(\" \"),(_vm.error !== '')?[_c('div',{staticClass:\"alert alert-danger text-center\"},[_vm._v(\"\\n          \"+_vm._s(_vm.error)+\"\\n        \")])]:_vm._e(),_vm._v(\" \"),(_vm.redirect)?[_c('div',{staticClass:\"alert alert-success text-center\"},[_vm._v(\"\\n          Account created successfully. Redirecting to sign in page\\n        \")])]:_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"panel-body\"},[_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register),expression:\"register\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Username\"},domProps:{\"value\":(_vm.register)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.register=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.password),expression:\"password\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"placeholder\":\"Password\"},domProps:{\"value\":(_vm.password)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.password=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.superadmintoken),expression:\"superadmintoken\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"placeholder\":\"Super Admin Token\"},domProps:{\"value\":(_vm.superadmintoken)},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.superadmintoken=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-block btn-primary\",attrs:{\"disabled\":_vm.progress,\"type\":\"submit\"},on:{\"click\":_vm.submit}},[(!_vm.progress)?[_vm._v(\"\\n            Register\\n          \")]:[_c('i',{staticClass:\"fa fa-circle-o-notch fa-spin\",attrs:{\"aria-hidden\":\"true\"}})]],2)])],2)]),_vm._v(\" \"),_vm._m(1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-header\"},[_c('h4',{staticClass:\"primary\"},[_vm._v(\"Sign up\")]),_vm._v(\" \"),_c('h4',{staticClass:\"secondary\"},[_vm._v(\"Create a Cape account.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"footer\"},[_c('p',[_vm._v(\"\\n      Already have an account?\\n      \"),_c('a',{staticClass:\"link link-primary\",attrs:{\"href\":\"#/login\"}},[_vm._v(\"Sign in\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"WIS8\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"Xais\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cape-authentication-login\"},[_c('div',{staticClass:\"panel\"},[_c('div',{staticClass:\"panel-inner\"},[_vm._m(0),_vm._v(\" \"),(_vm.hasOAuthError)?[_c('div',{staticClass:\"alert alert-danger text-center\"},[_vm._v(\"\\n          \"+_vm._s(_vm.OAUTH_ERROR)+\"\\n        \")])]:_vm._e(),_vm._v(\" \"),(_vm.error !== '')?[_c('div',{staticClass:\"alert alert-danger text-center\"},[_vm._v(\"\\n          \"+_vm._s(_vm.error)+\"\\n        \")])]:_vm._e(),_vm._v(\" \"),(_vm.redirect)?[_c('div',{staticClass:\"alert alert-success text-center\"},[_vm._v(\"\\n          Redirecting to dashboard\\n        \")])]:_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"panel-body\"},[_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login),expression:\"login\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Username\"},domProps:{\"value\":(_vm.login)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.login=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.password),expression:\"password\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"placeholder\":\"Password\"},domProps:{\"value\":(_vm.password)},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.password=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-block btn-primary\",attrs:{\"disabled\":_vm.progress,\"type\":\"submit\"},on:{\"click\":_vm.submit}},[(!_vm.progress)?[_vm._v(\"\\n            Login\\n          \")]:[_c('i',{staticClass:\"fa fa-circle-o-notch fa-spin\",attrs:{\"aria-hidden\":\"true\"}})]],2)])],2)]),_vm._v(\" \"),_vm._m(1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-header\"},[_c('h4',{staticClass:\"primary\"},[_vm._v(\"Welcome!\")]),_vm._v(\" \"),_c('h4',{staticClass:\"secondary\"},[_vm._v(\"Sign in to use your account.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"footer\"},[_c('p',[_vm._v(\"\\n      Don't have an account?\\n      \"),_c('a',{staticClass:\"link link-primary\",attrs:{\"href\":\"#/register\"}},[_vm._v(\"Sign up\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"YaEn\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(\"7+uW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__(\"/ocq\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Login__ = __webpack_require__(\"xJsL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Recover__ = __webpack_require__(\"exX0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Register__ = __webpack_require__(\"dIqY\");\n\n\n// import Hello from '@/components/Hello'\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]({\n  routes: [\n  // {\n  //   path: '/',\n  //   name: 'Hello',\n  //   component: Hello\n  // }\n  {\n    alias: '/',\n    path: '/login',\n    name: 'login',\n    component: __WEBPACK_IMPORTED_MODULE_2__components_Login__[\"a\" /* default */]\n  }, {\n    path: '/login/:error',\n    component: __WEBPACK_IMPORTED_MODULE_2__components_Login__[\"a\" /* default */]\n  }, {\n    path: '/recover',\n    name: 'recover',\n    component: __WEBPACK_IMPORTED_MODULE_3__components_Recover__[\"default\"]\n  }, {\n    path: '/register',\n    name: 'register',\n    component: __WEBPACK_IMPORTED_MODULE_4__components_Register__[\"a\" /* default */]\n  }]\n}));\n\n/***/ }),\n\n/***/ \"dIqY\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Register_vue__ = __webpack_require__(\"JJT7\");\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ea2a2240_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Register_vue__ = __webpack_require__(\"W45A\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"7fgN\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-ea2a2240\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Register_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ea2a2240_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Register_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"exX0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Recover_vue__ = __webpack_require__(\"V0aP\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Recover_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Recover_vue__);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_620fbf7f_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Recover_vue__ = __webpack_require__(\"uj/z\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"Rhhe\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-620fbf7f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Recover_vue___default.a,\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_620fbf7f_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Recover_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"kPZ4\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"lQSc\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cape-authentication\"},[_c('div',{staticClass:\"h-100 d-flex flex-column\"},[_c('div',{staticClass:\"h-50\"}),_vm._v(\" \"),_c('div',{staticClass:\"mx-auto\"},[_c('div',{staticClass:\"header\"},[_c('a',{staticClass:\"logo\",attrs:{\"href\":_vm.logoURL}},[_vm._v(\"Cape\")])]),_vm._v(\" \"),_c('router-view',{staticClass:\"mx-auto\"})],1),_vm._v(\" \"),_c('div',{staticClass:\"h-50\"})])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"nKb+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(\"M4fF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__client_js__ = __webpack_require__(\"2Eh+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__configuration_js__ = __webpack_require__(\"/1Ne\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\nvar OAUTH_ERROR = 'We were unable to log you in.';\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\n  data: function data() {\n    return {\n      OAUTH_ERROR: OAUTH_ERROR,\n      login: '',\n      password: '',\n      progress: false,\n      error: '',\n      redirect: false\n    };\n  },\n\n  computed: {\n    hasOAuthError: function hasOAuthError() {\n      if (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.has(this.$route, 'params.error')) {\n        return this.$route.params.error;\n      }\n      return false;\n    }\n  },\n\n  methods: {\n    submit: function submit() {\n      __WEBPACK_IMPORTED_MODULE_1__client_js__[\"a\" /* default */].authentication.login({\n        username: this.login,\n        password: this.password\n      }, __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.bind(function (error, data) {\n        this.progress = false;\n        if (error) {\n          this.error = error.message;\n          return;\n        }\n        this.redirect = true;\n        if (__WEBPACK_IMPORTED_MODULE_2__configuration_js__[\"a\" /* default */].authentication.login.redirectURL) {\n          window.location.href = __WEBPACK_IMPORTED_MODULE_2__configuration_js__[\"a\" /* default */].authentication.login.redirectURL;\n        }\n      }, this));\n      this.progress = true;\n      this.error = '';\n      this.redirect = false;\n    },\n    social: function social(option) {\n      var successRedirectURL = __WEBPACK_IMPORTED_MODULE_2__configuration_js__[\"a\" /* default */].authentication.oauth.success.redirectURL;\n      var errorRedirectURL = __WEBPACK_IMPORTED_MODULE_2__configuration_js__[\"a\" /* default */].authentication.oauth.error.redirectURL;\n      if (!(successRedirectURL && errorRedirectURL)) {\n        return;\n      }\n      switch (option) {\n        case 'facebook':\n          __WEBPACK_IMPORTED_MODULE_1__client_js__[\"a\" /* default */].authentication.platform.facebook.login({\n            successRedirectURL: successRedirectURL,\n            errorRedirectURL: errorRedirectURL\n          });\n          break;\n        case 'google':\n          __WEBPACK_IMPORTED_MODULE_1__client_js__[\"a\" /* default */].authentication.platform.google.login({\n            successRedirectURL: successRedirectURL,\n            errorRedirectURL: errorRedirectURL\n          });\n          break;\n      }\n    },\n\n    api: function api() {\n      return __WEBPACK_IMPORTED_MODULE_1__client_js__[\"a\" /* default */];\n    }\n  }\n\n});\n\n/***/ }),\n\n/***/ \"uj/z\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cape-authentication-recover\"},[_c('div',{staticClass:\"panel\"},[_c('p',{staticClass:\"placeholder\"},[_vm._v(\"Recover content to be added here.\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"ujoT\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(\"M4fF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__client__ = __webpack_require__(\"2Eh+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__configuration__ = __webpack_require__(\"/1Ne\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_urijs__ = __webpack_require__(\"hBlz\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_urijs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_urijs__);\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_1__client__[\"a\" /* default */].user.token.query.get(function (error, data) {\n  if (!error && __WEBPACK_IMPORTED_MODULE_2__configuration__[\"a\" /* default */].authentication.login.redirectURL) {\n    var uri = new __WEBPACK_IMPORTED_MODULE_3_urijs___default.a();\n    var query = uri.search(true);\n    if (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.has(query, 'redirect_uri') && __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.has(query, 'account_linking_token')) {\n      window.location.href = __WEBPACK_IMPORTED_MODULE_2__configuration__[\"a\" /* default */].authentication.login.redirectURL + '?redirect_uri=' + query.redirect_uri + '&account_linking_token=' + query.account_linking_token;\n    } else {\n      window.location.href = __WEBPACK_IMPORTED_MODULE_2__configuration__[\"a\" /* default */].authentication.login.redirectURL;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"woyk\":\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cape\"] = factory();\n\telse\n\t\troot[\"cape\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bind = __webpack_require__(6);\nvar isBuffer = __webpack_require__(18);\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object' && !isArray(obj)) {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the value at `key`, unless `key` is \"__proto__\".\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function safeGet(object, key) {\n    return key == '__proto__'\n      ? undefined\n      : object[key];\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14), __webpack_require__(15)(module)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable no-proto */\n\n// Custom error that works on IE ( :) ).\n// Solution taken from:\n// https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\nfunction ClientError(message, type) {\n  var instance = new Error(message);\n  instance.type = type;\n  Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n  return instance;\n}\n\nClientError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(ClientError, Error);\n} else {\n  ClientError.__proto__ = Error;\n}\n\n// Build error from library preset\nClientError.fromObject = function (fields) {\n  return new ClientError(fields.message, fields.type);\n};\n\n// Error preset library to\n// be used with \"fromObject\"\nClientError.library = {\n  timeout: {\n    message: 'Timeout value exceeded. Please try again later.',\n    type: 'timeout'\n  },\n  unknown: {\n    message: 'An unknown error occured. Please try again later.',\n    type: 'unknown'\n  },\n  failedConnection: {\n    message: 'Unable to connect to backend. Please run a cape-webservices instance or connect to an existing one. Then specify your backend using the URL paramater: http://yourfrontend.com/?configuration={\"api\": {\"backendURL\": \"http://yourbackend.com:5050\",\"timeout\":15000} }',\n    type: 'failedConnection'\n  },\n  malformedResponse: {\n    message: 'Malformed response.',\n    type: 'malformedResponse'\n  },\n  notFound: {\n    message: 'Not found.',\n    type: 'notFound'\n  },\n  server: {\n    message: '',\n    type: 'server'\n  }\n};\n\nexports.default = ClientError;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _configuration = __webpack_require__(12);\n\nvar _configuration2 = _interopRequireDefault(_configuration);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *\n * API path & method map\n *\n */\n\nvar METHOD_GET = 'get';\nvar METHOD_POST = 'post';\n\nexports.default = {\n  // Authentication\n  authentication: {\n    register: {\n      path: '/user/create-user',\n      method: METHOD_GET\n    },\n    login: {\n      path: '/user/login',\n      method: METHOD_GET\n    },\n    logout: {\n      path: '/user/logout',\n      method: METHOD_GET\n    },\n    platform: {\n      facebook: {\n        login: {\n          path: '/user/facebook-oauth2callback',\n          method: METHOD_POST\n        }\n      },\n      google: {\n        login: {\n          path: '/user/google-oauth2callback',\n          method: METHOD_POST\n        }\n      }\n    }\n  },\n  // User\n  user: {\n    plan: {\n      set: {\n        path: '/user/set-plan',\n        method: METHOD_POST\n      }\n    },\n    profile: {\n      get: {\n        path: '/user/get-profile',\n        method: METHOD_GET\n      }\n    },\n    threshold: {\n      get: {\n        path: '/user/get-default-threshold',\n        method: METHOD_GET\n      },\n      set: {\n        path: '/user/set-default-threshold',\n        method: METHOD_POST\n      }\n    },\n    forwardEmail: {\n      set: {\n        path: '/user/set-forward-email',\n        method: METHOD_POST\n      }\n    },\n    token: {\n      query: {\n        get: {\n          path: '/user/get-user-token',\n          method: METHOD_GET\n        }\n      },\n      admin: {\n        get: {\n          path: '/user/get-admin-token',\n          method: METHOD_GET\n        }\n      }\n    },\n    terms: {\n      agree: {\n        path: '/user/set-terms-agreed',\n        method: METHOD_POST\n      }\n    },\n    onboarding: {\n      complete: {\n        path: '/user/set-onboarding-completed',\n        method: METHOD_POST\n      }\n    },\n    statistics: {\n      get: {\n        path: '/user/stats',\n        method: METHOD_GET\n      }\n    }\n  },\n  // Inbox\n  inbox: {\n    paginate: {\n      path: '/inbox/get-inbox',\n      method: METHOD_POST\n    },\n    markAsRead: {\n      path: '/inbox/mark-inbox-read',\n      method: METHOD_POST\n    },\n    archive: {\n      path: '/inbox/archive-inbox',\n      method: METHOD_POST\n    }\n  },\n  // Reply\n  reply: {\n    paginate: {\n      path: '/saved-replies/get-saved-replies',\n      method: METHOD_POST\n    },\n    create: {\n      path: '/saved-replies/add-saved-reply',\n      method: METHOD_POST\n    },\n    read: {\n      path: '/saved-replies/get-saved-replies',\n      method: METHOD_POST\n    },\n    delete: {\n      path: '/saved-replies/delete-saved-reply',\n      method: METHOD_POST\n    },\n    scrape: {\n      path: '/saved-replies/scrape',\n      method: METHOD_POST\n    },\n    question: {\n      paraphrase: {\n        create: {\n          path: '/saved-replies/add-paraphrase-question',\n          method: METHOD_POST\n        },\n        update: {\n          path: '/saved-replies/edit-paraphrase-question',\n          method: METHOD_POST\n        },\n        delete: {\n          path: '/saved-replies/delete-paraphrase-question',\n          method: METHOD_POST\n        }\n      },\n      canonical: {\n        update: {\n          path: '/saved-replies/edit-canonical-question',\n          method: METHOD_POST\n        }\n      }\n    },\n    answer: {\n      create: {\n        path: '/saved-replies/add-answer',\n        method: METHOD_POST\n      },\n      update: {\n        path: '/saved-replies/edit-answer',\n        method: METHOD_POST\n      },\n      delete: {\n        path: '/saved-replies/delete-answer',\n        method: METHOD_POST\n      }\n    }\n  },\n  // Document\n  document: {\n    paginate: {\n      path: '/documents/get-documents',\n      method: METHOD_POST\n    },\n    create: {\n      path: '/documents/add-document',\n      method: METHOD_POST\n    },\n    read: {\n      path: '/documents/get-documents',\n      method: METHOD_POST\n    },\n    delete: {\n      path: '/documents/delete-document',\n      method: METHOD_POST\n    }\n  },\n  // Query\n  query: {\n    paginate: {\n      path: '/answer',\n      method: METHOD_POST\n    }\n  },\n  // Annotation\n  annotation: {\n    paginate: {\n      path: '/annotations/get-annotations',\n      method: METHOD_POST\n    },\n    create: {\n      path: '/annotations/add-annotation',\n      method: METHOD_POST\n    },\n    delete: {\n      path: '/annotations/delete-annotation',\n      method: METHOD_POST\n    },\n    question: {\n      paraphrase: {\n        create: {\n          path: '/annotations/add-paraphrase-question',\n          method: METHOD_POST\n        },\n        update: {\n          path: '/annotations/edit-paraphrase-question',\n          method: METHOD_POST\n        },\n        delete: {\n          path: '/annotations/delete-paraphrase-question',\n          method: METHOD_POST\n        }\n      },\n      canonical: {\n        update: {\n          path: '/annotations/edit-canonical-question',\n          method: METHOD_POST\n        }\n      }\n    },\n    answer: {\n      create: {\n        path: '/annotations/add-answer',\n        method: METHOD_POST\n      },\n      update: {\n        path: '/annotations/edit-answer',\n        method: METHOD_POST\n      },\n      delete: {\n        path: '/annotations/delete-answer',\n        method: METHOD_POST\n      }\n    }\n  },\n  // Log\n  log: {\n    event: {\n      path: '/logEvent',\n      method: METHOD_POST\n    }\n  }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Resource = function () {\n  function Resource(client, model) {\n    _classCallCheck(this, Resource);\n\n    this._client = client;\n    this._model = model;\n  }\n\n  // _request generates requests calling the\n  // callback and passing the right arguments to it.\n\n\n  _createClass(Resource, [{\n    key: '_request',\n    value: function _request(options, callback) {\n      var configuration = _lodash2.default.defaults(options, {\n        method: 'GET',\n        path: undefined,\n        parameters: undefined,\n        data: undefined,\n        headers: undefined\n      });\n      // token authentication\n      if (_lodash2.default.has(this._client.configuration, 'token.admin')) {\n        configuration.parameters = _lodash2.default.extend(configuration.parameters, {\n          adminToken: this._client.configuration.token.admin\n        });\n      }\n      if (_lodash2.default.has(this._client.configuration, 'token.query')) {\n        configuration.parameters = _lodash2.default.extend(configuration.parameters, {\n          token: this._client.configuration.token.query\n        });\n      }\n      // use the configured axios\n      // instance found on client\n      this._client._axios.request({\n        method: configuration.method,\n        url: configuration.path,\n        params: configuration.parameters,\n        data: configuration.data,\n        headers: configuration.headers,\n        withCredentials: true\n      }).then(function (response) {\n        // real success callback\n        if (_lodash2.default.has(response, 'data.success') && _lodash2.default.has(response, 'data.result') && response.data.success) {\n          callback(null, response.data.result);\n          return;\n        }\n        // error (unsuccessful) server response with message\n        if (_lodash2.default.has(response, 'data.success') && _lodash2.default.has(response, 'data.result.message') && !response.data.success) {\n          callback(_Error2.default.fromObject({\n            type: _Error2.default.library.server.type,\n            message: response.data.result.message\n          }), null);\n          return;\n        }\n        // unknown error\n        callback(_Error2.default.fromObject(_Error2.default.library.unknown), null);\n      }).catch(function (error) {\n        if (_lodash2.default.has(error, 'code') && error.code === 'ECONNABORTED') {\n          // timeout error\n          callback(_Error2.default.fromObject(_Error2.default.library.timeout), null);\n        } else if (_lodash2.default.has(error, 'response')) {\n          // request made but server responded with status\n          // code that falls out of the range of 2xx\n          if (_lodash2.default.has(error.response, 'data.result.message')) {\n            callback(_Error2.default.fromObject({\n              type: _Error2.default.library.server.type,\n              message: error.response.data.result.message\n            }), null);\n            return;\n          }\n          // unknown error\n          callback(_Error2.default.fromObject(_Error2.default.library.failedConnection), null);\n        } else if (_lodash2.default.has(error, 'request')) {\n          // request made but no response was received\n          callback(_Error2.default.fromObject(_Error2.default.library.unknown), null);\n        } else {\n          // something else happened\n          callback(_Error2.default.fromObject(_Error2.default.library.unknown), null);\n        }\n      });\n    }\n  }]);\n\n  return Resource;\n}();\n\nexports.default = Resource;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(0);\nvar normalizeHeaderName = __webpack_require__(20);\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(8);\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(8);\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(0);\nvar settle = __webpack_require__(21);\nvar buildURL = __webpack_require__(23);\nvar parseHeaders = __webpack_require__(24);\nvar isURLSameOrigin = __webpack_require__(25);\nvar createError = __webpack_require__(9);\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(26);\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(27);\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar enhanceError = __webpack_require__(22);\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  backend: {\n    url: 'http://localhost:5050/api/0.1' // Modified automatically at release\n  },\n  frontend: {\n    url: 'http://localhost:8080' // Modified automatically at release\n  },\n  mock: {\n    full: {\n      url: 'http://localhost:8080/mock/full/api/0.1' // Modified automatically at release\n    },\n    unlucky: {\n      url: 'http://localhost:8080/mock/unlucky/api/0.1' // Modified automatically at release\n    },\n    error: {\n      url: 'http://localhost:8080/mock/error/api/0.1' // Modified automatically at release\n    },\n    timeout: {\n      url: 'http://localhost:8080/mock/timeout/api/0.1' // Modified automatically at release\n    }\n  }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _axios = __webpack_require__(16);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _configuration = __webpack_require__(12);\n\nvar _configuration2 = _interopRequireDefault(_configuration);\n\nvar _constants = __webpack_require__(35);\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nvar _Authentication = __webpack_require__(36);\n\nvar _Authentication2 = _interopRequireDefault(_Authentication);\n\nvar _Document = __webpack_require__(37);\n\nvar _Document2 = _interopRequireDefault(_Document);\n\nvar _Inbox = __webpack_require__(38);\n\nvar _Inbox2 = _interopRequireDefault(_Inbox);\n\nvar _Query = __webpack_require__(39);\n\nvar _Query2 = _interopRequireDefault(_Query);\n\nvar _Reply = __webpack_require__(40);\n\nvar _Reply2 = _interopRequireDefault(_Reply);\n\nvar _User = __webpack_require__(41);\n\nvar _User2 = _interopRequireDefault(_User);\n\nvar _Annotation = __webpack_require__(42);\n\nvar _Annotation2 = _interopRequireDefault(_Annotation);\n\nvar _Log = __webpack_require__(43);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// List of resources that the API exposes\nvar resources = {\n  authentication: _Authentication2.default,\n  document: _Document2.default,\n  inbox: _Inbox2.default,\n  query: _Query2.default,\n  reply: _Reply2.default,\n  user: _User2.default,\n  annotation: _Annotation2.default,\n  log: _Log2.default\n\n  // Default API configuration\n};var defaultConfiguration = {\n  backendURL: _configuration2.default.backend.url,\n  timeout: 60000\n\n  // Client class\n};\nvar Client = function () {\n  function Client(configuration) {\n    _classCallCheck(this, Client);\n\n    this._configuration = null;\n    this._axios = null;\n    this.configuration = configuration;\n    this._setupResources();\n  }\n  // configuration setter\n  // once a new value is received, it is merged\n  // with the default one and a new instance of\n  // axios is generated\n\n\n  _createClass(Client, [{\n    key: '_setupResources',\n\n    // _setupResources iterates over the listed resources,\n    // intantiates them passing a reference to this object\n    // and defines a property where the resource can be\n    // accessed from\n    value: function _setupResources() {\n      var Resource = null;\n      for (var key in resources) {\n        Resource = resources[key];\n        this[key] = new Resource(this);\n      }\n    }\n  }, {\n    key: 'configuration',\n    set: function set(value) {\n      this._configuration = _lodash2.default.defaultsDeep(value, defaultConfiguration);\n      this._axios = _axios2.default.create({\n        baseURL: this._configuration.backendURL,\n        timeout: this._configuration.timeout,\n        withCredentials: true\n      });\n    }\n    // configuration getter\n    ,\n    get: function get() {\n      return this._configuration;\n    }\n  }]);\n\n  return Client;\n}();\n\n// Expose constants\n\n\n_lodash2.default.extend(Client, constants);\n\n// Expose ClientError class\nClient.Error = _Error2.default;\n\nexports.default = Client;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(17);\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar bind = __webpack_require__(6);\nvar Axios = __webpack_require__(19);\nvar defaults = __webpack_require__(5);\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(11);\naxios.CancelToken = __webpack_require__(33);\naxios.isCancel = __webpack_require__(10);\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(34);\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(5);\nvar utils = __webpack_require__(0);\nvar InterceptorManager = __webpack_require__(28);\nvar dispatchRequest = __webpack_require__(29);\nvar isAbsoluteURL = __webpack_require__(31);\nvar combineURLs = __webpack_require__(32);\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n  config.method = config.method.toLowerCase();\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar createError = __webpack_require__(9);\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar transformData = __webpack_require__(30);\nvar isCancel = __webpack_require__(10);\nvar defaults = __webpack_require__(5);\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Cancel = __webpack_require__(11);\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * API constant values\n */\n\n// Threshold values\nvar THRESHOLD_VERY_LOW = exports.THRESHOLD_VERY_LOW = 'verylow';\nvar THRESHOLD_LOW = exports.THRESHOLD_LOW = 'low';\nvar THRESHOLD_MEDIUM = exports.THRESHOLD_MEDIUM = 'medium';\nvar THRESHOLD_HIGH = exports.THRESHOLD_HIGH = 'high';\nvar THRESHOLD_VERY_HIGH = exports.THRESHOLD_VERY_HIGH = 'veryhigh';\n\n// Source values\nvar SOURCE_ALL = exports.SOURCE_ALL = 'all';\nvar SOURCE_REPLY = exports.SOURCE_REPLY = 'saved_reply';\nvar SOURCE_DOCUMENT = exports.SOURCE_DOCUMENT = 'document';\n\n// Mode values\nvar MODE_BALANCED = exports.MODE_BALANCED = 'balanced';\nvar MODE_SPEED = exports.MODE_SPEED = 'speed';\nvar MODE_ACCURATE = exports.MODE_ACCURATE = 'accuracy';\n\n// Plan values\nvar PLAN_FREE = exports.PLAN_FREE = 'free';\nvar PLAN_BASIC = exports.PLAN_BASIC = 'basic';\nvar PLAN_PRO = exports.PLAN_PRO = 'pro';\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource3 = __webpack_require__(4);\n\nvar _Resource4 = _interopRequireDefault(_Resource3);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Platform resource\n *\n */\n\nvar Platform = function (_Resource) {\n  _inherits(Platform, _Resource);\n\n  function Platform() {\n    _classCallCheck(this, Platform);\n\n    return _possibleConstructorReturn(this, (Platform.__proto__ || Object.getPrototypeOf(Platform)).apply(this, arguments));\n  }\n\n  _createClass(Platform, [{\n    key: 'register',\n\n    // register redirects the user to\n    // the platform authorization\n    // screen\n    value: function register(fields) {\n      var _fieldToInputNameMap;\n\n      // make sure we're in a browser\n      if (!document) {\n        return;\n      }\n      var options = this._model.register;\n      if (!options) {\n        return;\n      }\n      // constants\n      var FIELD_SUCCESS = 'successRedirectURL';\n      var FIELD_ERROR = 'errorRedirectURL';\n      // pick only known fields\n      fields = _lodash2.default.pick(fields, [FIELD_SUCCESS, FIELD_ERROR]);\n      // form\n      var url = this._client.configuration.backendURL + options.path;\n      var form = document.createElement('form');\n      form.setAttribute('method', options.method);\n      form.setAttribute('action', url);\n      // inputs\n      var fieldToInputNameMap = (_fieldToInputNameMap = {}, _defineProperty(_fieldToInputNameMap, FIELD_SUCCESS, 'successCallback'), _defineProperty(_fieldToInputNameMap, FIELD_ERROR, 'errorCallback'), _fieldToInputNameMap);\n      var inputName = '';\n      var inputValue = '';\n      var input = null;\n      for (var key in fields) {\n        inputName = fieldToInputNameMap[key];\n        inputValue = fields[key];\n        input = document.createElement('input');\n        input.setAttribute('type', 'hidden');\n        input.setAttribute('name', inputName);\n        input.setAttribute('value', inputValue);\n        form.appendChild(input);\n      }\n      document.body.appendChild(form);\n      form.submit();\n    }\n\n    // login redirects the user to\n    // the platform authorization\n    // screen\n\n  }, {\n    key: 'login',\n    value: function login(fields) {\n      var _fieldToInputNameMap2;\n\n      // make sure we're in a browser\n      if (!document) {\n        return;\n      }\n      var options = this._model.login;\n      if (!options) {\n        return;\n      }\n      // constants\n      var FIELD_SUCCESS = 'successRedirectURL';\n      var FIELD_ERROR = 'errorRedirectURL';\n      // pick only known fields\n      fields = _lodash2.default.pick(fields, [FIELD_SUCCESS, FIELD_ERROR]);\n      // form\n      var url = this._client.configuration.backendURL + options.path;\n      var form = document.createElement('form');\n      form.setAttribute('method', options.method);\n      form.setAttribute('action', url);\n      // inputs\n      var fieldToInputNameMap = (_fieldToInputNameMap2 = {}, _defineProperty(_fieldToInputNameMap2, FIELD_SUCCESS, 'successCallback'), _defineProperty(_fieldToInputNameMap2, FIELD_ERROR, 'errorCallback'), _fieldToInputNameMap2);\n      var inputName = '';\n      var inputValue = '';\n      var input = null;\n      for (var key in fields) {\n        inputName = fieldToInputNameMap[key];\n        inputValue = fields[key];\n        input = document.createElement('input');\n        input.setAttribute('type', 'hidden');\n        input.setAttribute('name', inputName);\n        input.setAttribute('value', inputValue);\n        form.appendChild(input);\n      }\n      document.body.appendChild(form);\n      form.submit();\n    }\n  }]);\n\n  return Platform;\n}(_Resource4.default);\n\n/**\n *\n * Authentication resource\n *\n */\n\nvar Authentication = function (_Resource2) {\n  _inherits(Authentication, _Resource2);\n\n  // constructor\n  function Authentication(client) {\n    _classCallCheck(this, Authentication);\n\n    var _this2 = _possibleConstructorReturn(this, (Authentication.__proto__ || Object.getPrototypeOf(Authentication)).call(this, client, _map2.default.authentication));\n\n    _this2._setupPlatform(client);\n    return _this2;\n  }\n  // _setupPlatform declares a \"platform\" property\n  // that enable accessing different platforms\n\n\n  _createClass(Authentication, [{\n    key: '_setupPlatform',\n    value: function _setupPlatform(client) {\n      var _this3 = this;\n\n      var collection = this._model.platform;\n      if (!collection) {\n        return;\n      }\n      this.platform = {};\n      _lodash2.default.each(collection, function (model, key) {\n        _this3.platform[key] = new Platform(client, model);\n      });\n    }\n    // register attempts to create a user account using the provided fields\n\n  }, {\n    key: 'register',\n    value: function register(fields, callback) {\n      var method = this._model.register.method;\n      var path = this._model.register.path;\n      fields = _lodash2.default.pick(fields, ['username', 'password', 'superadmintoken']);\n      var options = {\n        method: method,\n        path: path,\n        parameters: {\n          userId: fields.username,\n          password: fields.password,\n          superAdminToken: fields.superadmintoken\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'username')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // login attempts to sign in\n    // a user using the provided\n    // fields\n\n  }, {\n    key: 'login',\n    value: function login(fields, callback) {\n      var method = this._model.login.method;\n      var path = this._model.login.path;\n      fields = _lodash2.default.pick(fields, ['username', 'password']);\n      var options = {\n        method: method,\n        path: path,\n        parameters: {\n          login: fields.username,\n          password: fields.password\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'message') && _lodash2.default.has(data, 'sessionId') && _lodash2.default.has(data, 'adminToken')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // logout signs the user out\n    // of the application\n\n  }, {\n    key: 'logout',\n    value: function logout(callback) {\n      var options = this._model.logout;\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'message')) {\n            callback(null, data.message);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Authentication;\n}(_Resource4.default);\n\nexports.default = Authentication;\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource2 = __webpack_require__(4);\n\nvar _Resource3 = _interopRequireDefault(_Resource2);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global FormData */\n\n/**\n *\n * Document resource\n *\n */\n\nvar Document = function (_Resource) {\n  _inherits(Document, _Resource);\n\n  // constructor\n  function Document(client) {\n    _classCallCheck(this, Document);\n\n    return _possibleConstructorReturn(this, (Document.__proto__ || Object.getPrototypeOf(Document)).call(this, client, _map2.default.document));\n  }\n  // paginate returns paged\n  // document records\n\n\n  _createClass(Document, [{\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var _$defaults;\n\n      // pick known fields and\n      // specify default values\n      var FIELD_SEARCH = 'search';\n      var FIELD_SIZE = 'size';\n      var FIELD_NUMBER = 'number';\n      fields = _lodash2.default.defaults(_lodash2.default.pick(fields, [FIELD_SEARCH, FIELD_SIZE, FIELD_NUMBER]), (_$defaults = {}, _defineProperty(_$defaults, FIELD_SEARCH, ''), _defineProperty(_$defaults, FIELD_SIZE, 30), _defineProperty(_$defaults, FIELD_NUMBER, 0), _$defaults));\n      // options\n      var options = _lodash2.default.extend({\n        data: {\n          'searchTerm': fields[FIELD_SEARCH],\n          'numberOfItems': fields[FIELD_SIZE],\n          'offset': fields[FIELD_SIZE] * fields[FIELD_NUMBER]\n        }\n      }, this._model.paginate);\n      // request\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // create stores a\n    // new document\n\n  }, {\n    key: 'create',\n    value: function create(fields, callback) {\n      // pick known fields\n      var FIELD_ID = 'id';\n      var FIELD_TITLE = 'title';\n      var FIELD_ORIGIN = 'origin';\n      var FIELD_CONTENT = 'content';\n      var FIELD_FILE = 'file';\n      var FIELD_REPLACE = 'replace';\n      fields = _lodash2.default.pick(fields, [FIELD_ID, FIELD_TITLE, FIELD_ORIGIN, FIELD_CONTENT, FIELD_FILE, FIELD_REPLACE]);\n      // type\n      var TYPE_TEXT = 'text';\n      var TYPE_FILE = 'file';\n      // headers & data\n      var headers = void 0;\n      var data = {\n        'documentId': fields[FIELD_ID],\n        'title': fields[FIELD_TITLE],\n        'origin': fields[FIELD_ORIGIN],\n        'replace': fields[FIELD_REPLACE]\n      };\n      if (_lodash2.default.has(fields, FIELD_CONTENT)) {\n        data.type = TYPE_TEXT;\n        data.text = fields[FIELD_CONTENT];\n      } else if (_lodash2.default.has(fields, FIELD_FILE)) {\n        data.type = TYPE_FILE;\n        var formData = new FormData();\n        _lodash2.default.each(data, function (value, key) {\n          if (value) {\n            formData.append(key, value);\n          }\n        });\n        var file = fields[FIELD_FILE];\n        if (file.name) {\n          formData.append('file', file, file.name);\n        } else {\n          formData.append('file', file);\n        }\n        data = formData;\n        headers = {\n          'Content-Type': 'multipart/form-data'\n        };\n      }\n      // options\n      var options = _lodash2.default.extend({\n        data: data,\n        headers: headers\n      }, this._model.create);\n      // request\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'documentId')) {\n            callback(null, data.documentId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // read returns a document\n\n  }, {\n    key: 'read',\n    value: function read(id, callback) {\n      var method = this._model.read.method;\n      var path = this._model.read.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          documentIds: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items') && _lodash2.default.isArray(data.items)) {\n            if (data.totalItems === 1 && data.items.length === 1) {\n              callback(null, data.items[0]);\n            } else {\n              callback(_Error2.default.fromObject(_Error2.default.library.notFound), null);\n            }\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes\n    // a document\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var options = _lodash2.default.extend({\n        data: {\n          'documentId': id\n        }\n      }, this._model.delete);\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'documentId')) {\n            callback(null, data.documentId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Document;\n}(_Resource3.default);\n\nexports.default = Document;\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource2 = __webpack_require__(4);\n\nvar _Resource3 = _interopRequireDefault(_Resource2);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Inbox resource\n *\n */\n\nvar Inbox = function (_Resource) {\n  _inherits(Inbox, _Resource);\n\n  // constructor\n  function Inbox(client) {\n    _classCallCheck(this, Inbox);\n\n    return _possibleConstructorReturn(this, (Inbox.__proto__ || Object.getPrototypeOf(Inbox)).call(this, client, _map2.default.inbox));\n  }\n  // paginate returns\n  // paged inbox records\n\n\n  _createClass(Inbox, [{\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var method = this._model.paginate.method;\n      var path = this._model.paginate.path;\n      fields = _lodash2.default.pick(fields, ['read', 'answered', 'search', 'size', 'number']);\n      fields = _lodash2.default.defaults(fields, {\n        read: 'both',\n        answered: 'both',\n        search: '',\n        size: 30,\n        number: 0\n      });\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          read: fields.read,\n          answered: fields.answered,\n          searchTerm: fields.search,\n          numberOfItems: fields.size,\n          offset: fields.size * fields.number\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // markAsRead\n\n  }, {\n    key: 'markAsRead',\n    value: function markAsRead(id, callback) {\n      var method = this._model.markAsRead.method;\n      var path = this._model.markAsRead.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          inboxId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'inboxId')) {\n            callback(null, data.inboxId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // archive\n\n  }, {\n    key: 'archive',\n    value: function archive(id, callback) {\n      var method = this._model.archive.method;\n      var path = this._model.archive.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          inboxId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'inboxId')) {\n            callback(null, data.inboxId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Inbox;\n}(_Resource3.default);\n\nexports.default = Inbox;\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource3 = __webpack_require__(4);\n\nvar _Resource4 = _interopRequireDefault(_Resource3);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Launcher = function (_Resource) {\n  _inherits(Launcher, _Resource);\n\n  // constructor\n  function Launcher(client, model, fields) {\n    _classCallCheck(this, Launcher);\n\n    var _this = _possibleConstructorReturn(this, (Launcher.__proto__ || Object.getPrototypeOf(Launcher)).call(this, client, model));\n\n    _this._fields = fields;\n    return _this;\n  }\n  // paginate\n\n\n  _createClass(Launcher, [{\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var method = this._model.paginate.method;\n      var path = this._model.paginate.path;\n      fields = _lodash2.default.pick(fields, ['size', 'number']);\n      fields = _lodash2.default.defaults(fields, {\n        size: 1,\n        number: 0\n      });\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          question: this._fields.content,\n          text: this._fields.target,\n          threshold: this._fields.threshold,\n          documentIds: this._fields.documentIDs,\n          sourceType: this._fields.source,\n          speedOrAccuracy: this._fields.mode,\n          numberOfItems: fields.size,\n          offset: fields.size * fields.number\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'items')) {\n            callback(null, data.items);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Launcher;\n}(_Resource4.default);\n\nvar Query = function (_Resource2) {\n  _inherits(Query, _Resource2);\n\n  // constructor\n  function Query(client) {\n    _classCallCheck(this, Query);\n\n    return _possibleConstructorReturn(this, (Query.__proto__ || Object.getPrototypeOf(Query)).call(this, client, _map2.default.query));\n  }\n  // prepare stores strictly\n  // query related fields\n\n\n  _createClass(Query, [{\n    key: 'prepare',\n    value: function prepare(fields) {\n      fields = _lodash2.default.pick(fields, ['target', 'content', 'threshold', 'documentIDs', 'source', 'mode']);\n      return new Launcher(this._client, this._model, fields);\n    }\n  }]);\n\n  return Query;\n}(_Resource4.default);\n\nQuery.Launcher = Launcher;\n\nexports.default = Query;\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource4 = __webpack_require__(4);\n\nvar _Resource5 = _interopRequireDefault(_Resource4);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Question\n *\n */\n\nvar Question = function (_Resource) {\n  _inherits(Question, _Resource);\n\n  function Question() {\n    _classCallCheck(this, Question);\n\n    return _possibleConstructorReturn(this, (Question.__proto__ || Object.getPrototypeOf(Question)).apply(this, arguments));\n  }\n\n  _createClass(Question, [{\n    key: 'create',\n\n    // create stores\n    // a new question\n    value: function create(fields, callback) {\n      if (!this._model.create) {\n        return;\n      }\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['replyID', 'content']);\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          replyId: fields.replyID,\n          question: fields.content\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'questionId')) {\n            callback(null, data.questionId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // update stores\n    // question changes\n\n  }, {\n    key: 'update',\n    value: function update(fields, callback) {\n      var method = this._model.update.method;\n      var path = this._model.update.path;\n      fields = _lodash2.default.pick(fields, ['id', 'replyID', 'content']);\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          questionId: fields.id,\n          replyId: fields.replyID,\n          question: fields.content\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          var interests = ['questionId', 'replyId'];\n          var interest = '';\n          var found = false;\n          for (var i = 0; i < interests.length; i++) {\n            interest = interests[i];\n            if (_lodash2.default.has(data, interest)) {\n              found = true;\n              break;\n            }\n          }\n          if (found) {\n            callback(null, data[interest]);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes\n    // a question\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      if (!this._model.delete) {\n        return;\n      }\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          questionId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'questionId')) {\n            callback(null, data.questionId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Question;\n}(_Resource5.default);\n\n/**\n *\n * Answer\n *\n */\n\nvar Answer = function (_Resource2) {\n  _inherits(Answer, _Resource2);\n\n  function Answer() {\n    _classCallCheck(this, Answer);\n\n    return _possibleConstructorReturn(this, (Answer.__proto__ || Object.getPrototypeOf(Answer)).apply(this, arguments));\n  }\n\n  _createClass(Answer, [{\n    key: 'create',\n\n    // create stores\n    // a new answer\n    value: function create(fields, callback) {\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['replyID', 'content']);\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          replyId: fields.replyID,\n          answer: fields.content\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // update changes\n    // the answer\n\n  }, {\n    key: 'update',\n    value: function update(fields, callback) {\n      var method = this._model.update.method;\n      var path = this._model.update.path;\n      fields = _lodash2.default.pick(fields, ['id', 'content']);\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          answerId: fields.id,\n          answer: fields.content\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes\n    // an answer\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          answerId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Answer;\n}(_Resource5.default);\n\n/**\n *\n * Reply\n *\n */\n\nvar Reply = function (_Resource3) {\n  _inherits(Reply, _Resource3);\n\n  // constructor\n  function Reply(client) {\n    _classCallCheck(this, Reply);\n\n    var _this3 = _possibleConstructorReturn(this, (Reply.__proto__ || Object.getPrototypeOf(Reply)).call(this, client, _map2.default.reply));\n\n    _this3._setupQuestion();\n    _this3._setupAnswer();\n    return _this3;\n  }\n  // _setupQuestion declares a \"question\" property\n  // that enables accessing different question types\n\n\n  _createClass(Reply, [{\n    key: '_setupQuestion',\n    value: function _setupQuestion() {\n      var _this4 = this;\n\n      var collection = this._model.question;\n      if (!collection) {\n        return;\n      }\n      this.question = {};\n      _lodash2.default.each(collection, function (model, key) {\n        _this4.question[key] = new Question(_this4._client, model);\n      });\n    }\n    // _setupAnswer declares an \"answer\" property\n    // that enables accessing answer resource\n    // methods\n\n  }, {\n    key: '_setupAnswer',\n    value: function _setupAnswer() {\n      var model = this._model.answer;\n      if (!model) {\n        return;\n      }\n      this.answer = new Answer(this._client, model);\n    }\n    // paginate returns paged\n    // reply records\n\n  }, {\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var method = this._model.paginate.method;\n      var path = this._model.paginate.path;\n      fields = _lodash2.default.pick(fields, ['search', 'size', 'number']);\n      fields = _lodash2.default.defaults(fields, {\n        search: '',\n        size: 30,\n        number: 0\n      });\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          searchTerm: fields.search,\n          numberOfItems: fields.size,\n          offset: fields.size * fields.number\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // create stores a new reply\n\n  }, {\n    key: 'create',\n    value: function create(fields, callback) {\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['question', 'answer']);\n      var options = {\n        method: method,\n        path: path,\n        data: fields\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'replyId') && _lodash2.default.has(data, 'answerId')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // read returns a reply\n\n  }, {\n    key: 'read',\n    value: function read(id, callback) {\n      var method = this._model.read.method;\n      var path = this._model.read.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          savedReplyIds: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items') && _lodash2.default.isArray(data.items)) {\n            if (data.totalItems === 1 && data.items.length === 1) {\n              callback(null, data.items[0]);\n            } else {\n              callback(_Error2.default.fromObject(_Error2.default.library.notFound), null);\n            }\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes a reply\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          replyId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'replyId')) {\n            callback(null, data.replyId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }, {\n    key: 'scrape',\n    value: function scrape(url, callback) {\n      var method = this._model.scrape.method;\n      var path = this._model.scrape.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          url: decodeURIComponent(url)\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'message')) {\n            callback(null, data.message);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Reply;\n}(_Resource5.default);\n\nexports.default = Reply;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource10 = __webpack_require__(4);\n\nvar _Resource11 = _interopRequireDefault(_Resource10);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Profile resource\n *\n */\n\nvar Profile = function (_Resource) {\n  _inherits(Profile, _Resource);\n\n  function Profile() {\n    _classCallCheck(this, Profile);\n\n    return _possibleConstructorReturn(this, (Profile.__proto__ || Object.getPrototypeOf(Profile)).apply(this, arguments));\n  }\n\n  _createClass(Profile, [{\n    key: 'get',\n\n    // get retrieves the\n    // profile details\n    value: function get(callback) {\n      var options = this._model.get;\n      this._request(options, function (error, data) {\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'username') && _lodash2.default.has(data, 'plan') && _lodash2.default.has(data, 'termsAgreed') && _lodash2.default.has(data, 'onboardingCompleted') && _lodash2.default.has(data, 'forwardEmail') && _lodash2.default.has(data, 'forwardEmailVerified')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Profile;\n}(_Resource11.default);\n\n/**\n *\n * Threshold resource\n *\n */\n\nvar Threshold = function (_Resource2) {\n  _inherits(Threshold, _Resource2);\n\n  function Threshold() {\n    _classCallCheck(this, Threshold);\n\n    return _possibleConstructorReturn(this, (Threshold.__proto__ || Object.getPrototypeOf(Threshold)).apply(this, arguments));\n  }\n\n  _createClass(Threshold, [{\n    key: 'get',\n\n    // get retrieves the current\n    // threshold value that is\n    // used by the user\n    value: function get(callback) {\n      var options = this._model.get;\n      this._request(options, function (error, data) {\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'threshold')) {\n            callback(null, data.threshold);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n\n    // set sets a new threshold\n    // value that should be used\n    // by the user\n\n  }, {\n    key: 'set',\n    value: function set(value, callback) {\n      var options = _lodash2.default.extend({\n        data: {\n          'threshold': value\n        }\n      }, this._model.set);\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'threshold')) {\n            callback(null, data.threshold);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Threshold;\n}(_Resource11.default);\n\n/**\n *\n * Forward email resource\n *\n */\n\nvar ForwardEmail = function (_Resource3) {\n  _inherits(ForwardEmail, _Resource3);\n\n  function ForwardEmail() {\n    _classCallCheck(this, ForwardEmail);\n\n    return _possibleConstructorReturn(this, (ForwardEmail.__proto__ || Object.getPrototypeOf(ForwardEmail)).apply(this, arguments));\n  }\n\n  _createClass(ForwardEmail, [{\n    key: 'set',\n\n    // set sets the forwarding email address\n    value: function set(value, callback) {\n      var method = this._model.set.method;\n      var path = this._model.set.path;\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          email: value\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'forwardEmail')) {\n            callback(null, data.forwardEmail);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return ForwardEmail;\n}(_Resource11.default);\n\n/**\n *\n * Token resource\n *\n */\n\nvar Token = function (_Resource4) {\n  _inherits(Token, _Resource4);\n\n  function Token() {\n    _classCallCheck(this, Token);\n\n    return _possibleConstructorReturn(this, (Token.__proto__ || Object.getPrototypeOf(Token)).apply(this, arguments));\n  }\n\n  _createClass(Token, [{\n    key: 'get',\n\n    // get retrieves the token\n    // value from the backend\n    value: function get(callback) {\n      var options = this._model.get;\n      this._request(options, function (error, data) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var interests = ['userToken', 'adminToken'];\n          var interest = '';\n          var found = false;\n          for (var i = 0; i < interests.length; i++) {\n            interest = interests[i];\n            if (_lodash2.default.has(data, interest)) {\n              found = true;\n              break;\n            }\n          }\n          if (found) {\n            callback(null, data[interest]);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Token;\n}(_Resource11.default);\n\n/**\n *\n * Plan resource\n *\n */\n\nvar Plan = function (_Resource5) {\n  _inherits(Plan, _Resource5);\n\n  function Plan() {\n    _classCallCheck(this, Plan);\n\n    return _possibleConstructorReturn(this, (Plan.__proto__ || Object.getPrototypeOf(Plan)).apply(this, arguments));\n  }\n\n  _createClass(Plan, [{\n    key: 'set',\n\n    // set sets a new plan value\n    // that should be used by the\n    // user\n    value: function set(value, callback) {\n      var method = this._model.set.method;\n      var path = this._model.set.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          plan: value\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'plan')) {\n            callback(null, data.plan);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Plan;\n}(_Resource11.default);\n\n/**\n *\n * Terms resource\n *\n */\n\nvar Terms = function (_Resource6) {\n  _inherits(Terms, _Resource6);\n\n  function Terms() {\n    _classCallCheck(this, Terms);\n\n    return _possibleConstructorReturn(this, (Terms.__proto__ || Object.getPrototypeOf(Terms)).apply(this, arguments));\n  }\n\n  _createClass(Terms, [{\n    key: 'agree',\n\n    // agree marks the user as having\n    // agreed to the terms & conditions\n    value: function agree(callback) {\n      var method = this._model.agree.method;\n      var path = this._model.agree.path;\n      var options = {\n        method: method,\n        path: path\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'termsAgreed')) {\n            callback(null, data.termsAgreed);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Terms;\n}(_Resource11.default);\n\n/**\n *\n * Onboarding resource\n *\n */\n\nvar Onboarding = function (_Resource7) {\n  _inherits(Onboarding, _Resource7);\n\n  function Onboarding() {\n    _classCallCheck(this, Onboarding);\n\n    return _possibleConstructorReturn(this, (Onboarding.__proto__ || Object.getPrototypeOf(Onboarding)).apply(this, arguments));\n  }\n\n  _createClass(Onboarding, [{\n    key: 'complete',\n\n    // complete marks the user as having\n    // completed the onboarding process\n    value: function complete(callback) {\n      var method = this._model.complete.method;\n      var path = this._model.complete.path;\n      var options = {\n        method: method,\n        path: path\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'onboardingCompleted')) {\n            callback(null, data.onboardingCompleted);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Onboarding;\n}(_Resource11.default);\n\n/**\n *\n * Statistics resource\n *\n */\n\nvar Statistics = function (_Resource8) {\n  _inherits(Statistics, _Resource8);\n\n  function Statistics() {\n    _classCallCheck(this, Statistics);\n\n    return _possibleConstructorReturn(this, (Statistics.__proto__ || Object.getPrototypeOf(Statistics)).apply(this, arguments));\n  }\n\n  _createClass(Statistics, [{\n    key: 'get',\n\n    // get retrieves the stats\n    value: function get(callback) {\n      var method = this._model.get.method;\n      var path = this._model.get.path;\n      this._request({\n        method: method,\n        path: path\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          callback(null, data);\n        }\n      });\n    }\n  }]);\n\n  return Statistics;\n}(_Resource11.default);\n\n/**\n *\n * User resource\n *\n */\n\nvar User = function (_Resource9) {\n  _inherits(User, _Resource9);\n\n  // constructor\n  function User(client) {\n    _classCallCheck(this, User);\n\n    var _this9 = _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this, client, _map2.default.user));\n\n    _this9._setupProfile();\n    _this9._setupThreshold();\n    _this9._setupForwardEmail();\n    _this9._setupToken();\n    _this9._setupPlan();\n    _this9._setupTerms();\n    _this9._setupOnboarding();\n    _this9._setupStatistics();\n    return _this9;\n  }\n\n  // _setupProfile declares a \"profile\" property\n  // that enables accessing profile resource methods\n\n\n  _createClass(User, [{\n    key: '_setupProfile',\n    value: function _setupProfile() {\n      var model = this._model.profile;\n      if (!model) {\n        return;\n      }\n      this.profile = new Profile(this._client, model);\n    }\n\n    // _setupThreshold declares a \"threshold\" property\n    // that facilitates acccess to the threshold resource\n\n  }, {\n    key: '_setupThreshold',\n    value: function _setupThreshold() {\n      var model = this._model.threshold;\n      if (!model) {\n        return;\n      }\n      this.threshold = new Threshold(this._client, model);\n    }\n\n    // _setupForwardEmail declares a \"forwardEmail\" property\n    // that facilitates access to the forward email resource\n\n  }, {\n    key: '_setupForwardEmail',\n    value: function _setupForwardEmail() {\n      var model = this._model.forwardEmail;\n      if (!model) {\n        return;\n      }\n      this.forwardEmail = new ForwardEmail(this._client, model);\n    }\n\n    // _setupToken declares a \"token\" property\n    // that enable accessing different token types\n\n  }, {\n    key: '_setupToken',\n    value: function _setupToken() {\n      var _this10 = this;\n\n      var collection = this._model.token;\n      if (!collection) {\n        return;\n      }\n      this.token = {};\n      _lodash2.default.each(collection, function (model, key) {\n        _this10.token[key] = new Token(_this10._client, model);\n      });\n    }\n\n    // _setupPlan declares a \"plan\" property\n    // that enables accessing the plan resource\n\n  }, {\n    key: '_setupPlan',\n    value: function _setupPlan() {\n      var model = this._model.plan;\n      if (!model) {\n        return;\n      }\n      this.plan = new Plan(this._client, model);\n    }\n\n    // _setupTerms declares a \"terms\" property\n    // that enables accessint the terms resource\n\n  }, {\n    key: '_setupTerms',\n    value: function _setupTerms() {\n      var model = this._model.terms;\n      if (!model) {\n        return;\n      }\n      this.terms = new Terms(this._client, model);\n    }\n\n    // _setupOnboarding declares a \"onboarding\" property\n    // that enables accessing the onboarding resource\n\n  }, {\n    key: '_setupOnboarding',\n    value: function _setupOnboarding() {\n      var model = this._model.onboarding;\n      if (!model) {\n        return;\n      }\n      this.onboarding = new Onboarding(this._client, model);\n    }\n\n    // _setupStatistics declares a \"statistics\" property\n    // that enables accessing the statistics resource\n\n  }, {\n    key: '_setupStatistics',\n    value: function _setupStatistics() {\n      var model = this._model.statistics;\n      if (!model) {\n        return;\n      }\n      this.statistics = new Statistics(this._client, model);\n    }\n  }]);\n\n  return User;\n}(_Resource11.default);\n\nexports.default = User;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource4 = __webpack_require__(4);\n\nvar _Resource5 = _interopRequireDefault(_Resource4);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Question\n *\n */\n\nvar Question = function (_Resource) {\n  _inherits(Question, _Resource);\n\n  function Question() {\n    _classCallCheck(this, Question);\n\n    return _possibleConstructorReturn(this, (Question.__proto__ || Object.getPrototypeOf(Question)).apply(this, arguments));\n  }\n\n  _createClass(Question, [{\n    key: 'create',\n\n    // create stores a new question\n    value: function create(fields, callback) {\n      if (!this._model.create) {\n        return;\n      }\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['annotationID', 'content']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          annotationId: fields.annotationID,\n          question: fields.content\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'questionId')) {\n            callback(null, data.questionId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // update stores question changes\n\n  }, {\n    key: 'update',\n    value: function update(fields, callback) {\n      var method = this._model.update.method;\n      var path = this._model.update.path;\n      fields = _lodash2.default.pick(fields, ['id', 'annotationID', 'content']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          questionId: fields.id,\n          annotationId: fields.annotationID,\n          question: fields.content\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          var interests = ['questionId', 'annotationId'];\n          var interest = '';\n          var found = false;\n          for (var i = 0; i < interests.length; i++) {\n            interest = interests[i];\n            if (_lodash2.default.has(data, interest)) {\n              found = true;\n              break;\n            }\n          }\n          if (found) {\n            callback(null, data[interest]);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes a question\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      if (!this._model.delete) {\n        return;\n      }\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          questionId: id\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'questionId')) {\n            callback(null, data.questionId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Question;\n}(_Resource5.default);\n\n/**\n *\n * Answer\n *\n */\n\nvar Answer = function (_Resource2) {\n  _inherits(Answer, _Resource2);\n\n  function Answer() {\n    _classCallCheck(this, Answer);\n\n    return _possibleConstructorReturn(this, (Answer.__proto__ || Object.getPrototypeOf(Answer)).apply(this, arguments));\n  }\n\n  _createClass(Answer, [{\n    key: 'create',\n\n    // create stores a new answer\n    value: function create(fields, callback) {\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['annotationID', 'content']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          annotationId: fields.annotationID,\n          answer: fields.content\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // update changes the answer\n\n  }, {\n    key: 'update',\n    value: function update(fields, callback) {\n      var method = this._model.update.method;\n      var path = this._model.update.path;\n      fields = _lodash2.default.pick(fields, ['id', 'content']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          answerId: fields.id,\n          answer: fields.content\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes an answer\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          answerId: id\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Answer;\n}(_Resource5.default);\n\n/**\n *\n * Annotation\n *\n */\n\nvar Annotation = function (_Resource3) {\n  _inherits(Annotation, _Resource3);\n\n  // constructor\n  function Annotation(client) {\n    _classCallCheck(this, Annotation);\n\n    var _this3 = _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).call(this, client, _map2.default.annotation));\n\n    _this3._setupQuestion();\n    _this3._setupAnswer();\n    return _this3;\n  }\n  // _setupQuestion declares a \"question\" property\n  // that enables accessing different question types\n\n\n  _createClass(Annotation, [{\n    key: '_setupQuestion',\n    value: function _setupQuestion() {\n      var _this4 = this;\n\n      var collection = this._model.question;\n      if (!collection) {\n        return;\n      }\n      this.question = {};\n      _lodash2.default.each(collection, function (model, key) {\n        _this4.question[key] = new Question(_this4._client, model);\n      });\n    }\n    // _setupAnswer declares an \"answer\" property\n    // that enables accessing answer resource methods\n\n  }, {\n    key: '_setupAnswer',\n    value: function _setupAnswer() {\n      var model = this._model.answer;\n      if (!model) {\n        return;\n      }\n      this.answer = new Answer(this._client, model);\n    }\n    // paginate returns paged annotation records\n\n  }, {\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var method = this._model.paginate.method;\n      var path = this._model.paginate.path;\n      fields = _lodash2.default.pick(fields, ['annotationIDs', 'documentIDs', 'search', 'size', 'number']);\n      fields = _lodash2.default.defaults(fields, {\n        search: '',\n        size: 5,\n        number: 0\n      });\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          annotationIds: fields.annotationIDs,\n          documentIds: fields.documentIDs,\n          searchTerm: fields.search,\n          numberOfItems: fields.size,\n          offset: fields.size * fields.number\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // create stores a new annotation\n\n  }, {\n    key: 'create',\n    value: function create(fields, callback) {\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['question', 'answer', 'documentID', 'startOffset', 'endOffset', 'page', 'boundingBoxes', 'metadata']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          question: fields.question,\n          answer: fields.answer,\n          documentId: fields.documentID,\n          startOffset: fields.startOffset,\n          endOffset: fields.endOffset,\n          page: fields.page,\n          boundingBoxes: fields.boundingBoxes,\n          metadata: fields.metadata\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'annotationId') && _lodash2.default.has(data, 'answerId')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes an annotation\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          annotationId: id\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'annotationId')) {\n            callback(null, data.annotationId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Annotation;\n}(_Resource5.default);\n\nexports.default = Annotation;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource2 = __webpack_require__(4);\n\nvar _Resource3 = _interopRequireDefault(_Resource2);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Log = function (_Resource) {\n  _inherits(Log, _Resource);\n\n  // constructor\n  function Log(client) {\n    _classCallCheck(this, Log);\n\n    return _possibleConstructorReturn(this, (Log.__proto__ || Object.getPrototypeOf(Log)).call(this, client, _map2.default.log));\n  }\n  // event\n\n\n  _createClass(Log, [{\n    key: 'event',\n    value: function event(fields, callback) {\n      var method = this._model.event.method;\n      var path = this._model.event.path;\n      this._request({\n        method: method,\n        path: path,\n        data: fields\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          callback(null, data);\n        }\n      });\n    }\n  }]);\n\n  return Log;\n}(_Resource3.default);\n\nexports.default = Log;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=cape.js.map\n\n/***/ }),\n\n/***/ \"xJsL\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Login_vue__ = __webpack_require__(\"nKb+\");\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49d6518c_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Login_vue__ = __webpack_require__(\"Xais\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"7hGW\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-49d6518c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Login_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49d6518c_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Login_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ })\n\n},[\"NHnr\"]);\n\n\n// WEBPACK FOOTER //\n// authentication/js/app.9a3693f6ac4b40a7b602.js","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1b637f9b\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!./styles/global.scss\")\n  require(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1b637f9b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=1!./Authentication.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./Authentication.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./Authentication.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1b637f9b\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./Authentication.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1b637f9b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Authentication.vue\n// module id = +ulw\n// module chunks = 0","import _ from 'lodash'\nimport URI from 'urijs'\nimport JSON from 'JSON'\n\n// import globalConfiguration from '../../configuration'\n\n// Parse url\nconst uri = new URI()\nconst query = uri.search(true)\n\n// Runtime configuration passed\n// as query string param.\n// JSON is expected.\nlet runtime = ''\nif (_.has(query, 'configuration')) {\n  try {\n    runtime = JSON.parse(query.configuration)\n  } catch (e) {\n\n  }\n}\n\n// Configuration object\nexport default _.defaults(runtime, {\n  api: null, // use \"cape-client\" default configuration\n  authentication: {\n    logo: {\n      url: '/?configuration=' + JSON.stringify(runtime)\n    },\n    login: {\n      redirectURL: '/dashboard.html?configuration=' + JSON.stringify(runtime)\n    },\n    register: {\n      redirectURL: '/authentication.html?configuration=' + JSON.stringify(runtime)\n    },\n    oauth: {\n      error: {\n        redirectURL: '/authentication.html#/login/error?configuration=' + JSON.stringify(runtime)\n      },\n      success: {\n        redirectURL: '/dashboard.html?configuration=' + JSON.stringify(runtime)\n      }\n    }\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/configuration.js","import Client from '../../cape-client/dist/cape.js'\nimport configuration from './configuration'\n\nconst client = new Client(configuration.api)\n\nexport default client\n\n\n\n// WEBPACK FOOTER //\n// ./src/client.js","<style src=\"./styles/global.scss\" lang=\"scss\"></style>\n\n<style scoped>\n  .cape-authentication {\n    height: 100%;\n  }\n\n  .header {\n    padding: 0 0 48px 0;\n    margin: 1rem 0 0 0;\n    text-align: center;\n  }\n\n  .logo {\n    display: inline-block;\n    text-indent: -9999px;\n    width: 67px;\n    height: 43.2px;\n\n    background: url(\"./assets/symbol.svg\") no-repeat top left;\n    background-size: contain;\n  }\n</style>\n\n<template>\n  <div class=\"cape-authentication\">\n    <div class=\"h-100 d-flex flex-column\">\n      <div class=\"h-50\"></div>\n      <div class=\"mx-auto\">\n        <div class=\"header\">\n          <a class=\"logo\"\n            v-bind:href=\"logoURL\">Cape</a>\n        </div>\n        <router-view class=\"mx-auto\"></router-view>\n      </div>\n      <div class=\"h-50\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport configuration from '@/configuration.js'\n\nexport default {\n\n  computed: {\n    logoURL () {\n      let value = '#'\n      if (_.has(configuration, 'authentication.logo.url')) {\n        value = configuration.authentication.logo.url\n      }\n      return value\n    }\n  }\n\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/Authentication.vue","<style scoped lang=\"scss\">\n  .cape-authentication-register {\n    width: 416px;\n  }\n</style>\n\n<template>\n  <div class=\"cape-authentication-register\">\n\n    <!-- Panel -->\n\n    <div class=\"panel\">\n      <div class=\"panel-inner\">\n\n        <!-- Header -->\n\n        <div class=\"panel-header\">\n          <h4 class=\"primary\">Sign up</h4>\n          <h4 class=\"secondary\">Create a Cape account.</h4>\n        </div>\n\n        <!-- End header -->\n\n        <!-- Alerts -->\n\n        <template v-if=\"hasOAuthError\">\n          <div class=\"alert alert-danger text-center\">\n            {{ OAUTH_ERROR }}\n          </div>\n        </template>\n        <template v-if=\"error !== ''\">\n          <div class=\"alert alert-danger text-center\">\n            {{ error }}\n          </div>\n        </template>\n        <template v-if=\"redirect\">\n          <div class=\"alert alert-success text-center\">\n            Account created successfully. Redirecting to sign in page\n          </div>\n        </template>\n\n        <!-- End alerts -->\n\n        <!-- Body -->\n\n        <div class=\"panel-body\">\n          <div class=\"form-group\">\n            <input\n              v-model=\"register\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Username\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              v-model=\"password\"\n              type=\"password\"\n              class=\"form-control\"\n              placeholder=\"Password\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              v-model=\"superadmintoken\"\n              v-on:keyup.enter=\"submit\"\n              type=\"password\"\n              class=\"form-control\"\n              placeholder=\"Super Admin Token\">\n          </div>\n          <button\n            v-on:click=\"submit\"\n            v-bind:disabled=\"progress\"\n            type=\"submit\"\n            class=\"btn btn-block btn-primary\">\n            <template v-if=\"!progress\">\n              Register\n            </template>\n            <template v-else>\n              <i class=\"fa fa-circle-o-notch fa-spin\" aria-hidden=\"true\"></i>\n            </template>\n          </button>\n        </div>\n\n        <!-- End body -->\n\n      </div>\n    </div>\n\n    <!-- End panel -->\n\n    <!-- Footer -->\n\n    <div class=\"footer\">\n      <p>\n        Already have an account?\n        <a href=\"#/login\" class=\"link link-primary\">Sign in</a>\n      </p>\n    </div>\n\n    <!-- End footer -->\n\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport client from '@/client.js'\nimport configuration from '@/configuration.js'\n\nconst OAUTH_ERROR = 'We were unable to create your account.'\n\nexport default {\n\n  data: function () {\n    return {\n      OAUTH_ERROR: OAUTH_ERROR,\n      register: '',\n      password: '',\n      superadmintoken: '',\n      progress: false,\n      error: '',\n      redirect: false\n    }\n  },\n\n  computed: {\n    hasOAuthError () {\n      if (_.has(this.$route, 'params.error')) {\n        return this.$route.params.error\n      }\n      return false\n    }\n  },\n\n  methods: {\n    submit: function () {\n      client.authentication.register({\n        username: this.register,\n        password: this.password,\n        superadmintoken: this.superadmintoken\n      }, _.bind(function (error, data) {\n        this.progress = false\n        if (error) {\n          this.error = error.message\n          return\n        }\n        this.redirect = true\n        if (configuration.authentication.register.redirectURL) {\n          window.location.href = configuration.authentication.register.redirectURL\n        }\n      }, this))\n      this.progress = true\n      this.error = ''\n      this.redirect = false\n    },\n    social (option) {\n      const successRedirectURL = configuration.authentication.oauth.success.redirectURL\n      const errorRedirectURL = configuration.authentication.oauth.error.redirectURL\n      if (!(successRedirectURL && errorRedirectURL)) {\n        return\n      }\n      switch (option) {\n        case 'facebook':\n          client.authentication.platform.facebook.login({\n            successRedirectURL: successRedirectURL,\n            errorRedirectURL: errorRedirectURL\n          })\n          break\n        case 'google':\n          client.authentication.platform.google.login({\n            successRedirectURL: successRedirectURL,\n            errorRedirectURL: errorRedirectURL\n          })\n          break\n      }\n    },\n    api: function () {\n      return client\n    }\n  }\n\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Register.vue","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport Authentication from './Authentication'\nimport '@/redirect'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#authentication',\n  router,\n  template: '<cape-authentication/>',\n  components: {\n    'cape-authentication': Authentication\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cape-authentication-register\"},[_c('div',{staticClass:\"panel\"},[_c('div',{staticClass:\"panel-inner\"},[_vm._m(0),_vm._v(\" \"),(_vm.hasOAuthError)?[_c('div',{staticClass:\"alert alert-danger text-center\"},[_vm._v(\"\\n          \"+_vm._s(_vm.OAUTH_ERROR)+\"\\n        \")])]:_vm._e(),_vm._v(\" \"),(_vm.error !== '')?[_c('div',{staticClass:\"alert alert-danger text-center\"},[_vm._v(\"\\n          \"+_vm._s(_vm.error)+\"\\n        \")])]:_vm._e(),_vm._v(\" \"),(_vm.redirect)?[_c('div',{staticClass:\"alert alert-success text-center\"},[_vm._v(\"\\n          Account created successfully. Redirecting to sign in page\\n        \")])]:_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"panel-body\"},[_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register),expression:\"register\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Username\"},domProps:{\"value\":(_vm.register)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.register=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.password),expression:\"password\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"placeholder\":\"Password\"},domProps:{\"value\":(_vm.password)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.password=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.superadmintoken),expression:\"superadmintoken\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"placeholder\":\"Super Admin Token\"},domProps:{\"value\":(_vm.superadmintoken)},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.superadmintoken=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-block btn-primary\",attrs:{\"disabled\":_vm.progress,\"type\":\"submit\"},on:{\"click\":_vm.submit}},[(!_vm.progress)?[_vm._v(\"\\n            Register\\n          \")]:[_c('i',{staticClass:\"fa fa-circle-o-notch fa-spin\",attrs:{\"aria-hidden\":\"true\"}})]],2)])],2)]),_vm._v(\" \"),_vm._m(1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-header\"},[_c('h4',{staticClass:\"primary\"},[_vm._v(\"Sign up\")]),_vm._v(\" \"),_c('h4',{staticClass:\"secondary\"},[_vm._v(\"Create a Cape account.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"footer\"},[_c('p',[_vm._v(\"\\n      Already have an account?\\n      \"),_c('a',{staticClass:\"link link-primary\",attrs:{\"href\":\"#/login\"}},[_vm._v(\"Sign in\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-ea2a2240\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Register.vue\n// module id = W45A\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cape-authentication-login\"},[_c('div',{staticClass:\"panel\"},[_c('div',{staticClass:\"panel-inner\"},[_vm._m(0),_vm._v(\" \"),(_vm.hasOAuthError)?[_c('div',{staticClass:\"alert alert-danger text-center\"},[_vm._v(\"\\n          \"+_vm._s(_vm.OAUTH_ERROR)+\"\\n        \")])]:_vm._e(),_vm._v(\" \"),(_vm.error !== '')?[_c('div',{staticClass:\"alert alert-danger text-center\"},[_vm._v(\"\\n          \"+_vm._s(_vm.error)+\"\\n        \")])]:_vm._e(),_vm._v(\" \"),(_vm.redirect)?[_c('div',{staticClass:\"alert alert-success text-center\"},[_vm._v(\"\\n          Redirecting to dashboard\\n        \")])]:_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"panel-body\"},[_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login),expression:\"login\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Username\"},domProps:{\"value\":(_vm.login)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.login=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.password),expression:\"password\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"placeholder\":\"Password\"},domProps:{\"value\":(_vm.password)},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.password=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-block btn-primary\",attrs:{\"disabled\":_vm.progress,\"type\":\"submit\"},on:{\"click\":_vm.submit}},[(!_vm.progress)?[_vm._v(\"\\n            Login\\n          \")]:[_c('i',{staticClass:\"fa fa-circle-o-notch fa-spin\",attrs:{\"aria-hidden\":\"true\"}})]],2)])],2)]),_vm._v(\" \"),_vm._m(1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-header\"},[_c('h4',{staticClass:\"primary\"},[_vm._v(\"Welcome!\")]),_vm._v(\" \"),_c('h4',{staticClass:\"secondary\"},[_vm._v(\"Sign in to use your account.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"footer\"},[_c('p',[_vm._v(\"\\n      Don't have an account?\\n      \"),_c('a',{staticClass:\"link link-primary\",attrs:{\"href\":\"#/register\"}},[_vm._v(\"Sign up\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-49d6518c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Login.vue\n// module id = Xais\n// module chunks = 0","import Vue from 'vue'\nimport Router from 'vue-router'\n// import Hello from '@/components/Hello'\nimport Login from '@/components/Login'\nimport Recover from '@/components/Recover'\nimport Register from '@/components/Register'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    // {\n    //   path: '/',\n    //   name: 'Hello',\n    //   component: Hello\n    // }\n    {\n      alias: '/',\n      path: '/login',\n      name: 'login',\n      component: Login\n    },\n    {\n      path: '/login/:error',\n      component: Login\n    },\n    {\n      path: '/recover',\n      name: 'recover',\n      component: Recover\n    },\n    {\n      path: '/register',\n      name: 'register',\n      component: Register\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ea2a2240\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Register.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Register.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Register.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ea2a2240\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Register.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-ea2a2240\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Register.vue\n// module id = dIqY\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-620fbf7f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Recover.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Recover.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Recover.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-620fbf7f\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Recover.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-620fbf7f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Recover.vue\n// module id = exX0\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cape-authentication\"},[_c('div',{staticClass:\"h-100 d-flex flex-column\"},[_c('div',{staticClass:\"h-50\"}),_vm._v(\" \"),_c('div',{staticClass:\"mx-auto\"},[_c('div',{staticClass:\"header\"},[_c('a',{staticClass:\"logo\",attrs:{\"href\":_vm.logoURL}},[_vm._v(\"Cape\")])]),_vm._v(\" \"),_c('router-view',{staticClass:\"mx-auto\"})],1),_vm._v(\" \"),_c('div',{staticClass:\"h-50\"})])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-1b637f9b\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/Authentication.vue\n// module id = lQSc\n// module chunks = 0","<style scoped lang=\"scss\">\n  .cape-authentication-login {\n    width: 416px;\n\n    .separator {\n      position: relative;\n      text-align: center;\n      padding: 1.5rem 0;\n\n      .label {\n        display: inline-block;\n        padding: 0 0.5rem;\n        background-color: #ffffff;\n        white-space: nowrap;\n        color: #B0BEC5;\n        font-size: 0.75rem;\n      }\n\n      .line {\n        display: inline-block;\n        width: 100%;\n        height: 0.0625rem;\n        background-color: #E0E0E0;\n      }\n    }\n\n    .btn-facebook i,\n    .btn-google i, {\n      margin: 0 0.5rem 0 0;\n    }\n\n    .btn-facebook,\n    .btn-google {\n      background-color: #ECEFF1;\n      color: #90A4AE;\n\n      &:hover {\n        background-color: #CFD8DC;\n        color: #78909C;\n      }\n    }\n\n    // .btn-facebook {\n    //   background-color: #3F51B5;\n    //   color: #ffffff;\n    //\n    //   &:hover {\n    //     background-color: #303F9F;\n    //   }\n    // }\n    //\n    // .btn-google {\n    //   background-color: #2196F3;\n    //   color: #ffffff;\n    //\n    //   &:hover {\n    //     background-color: #1976D2;\n    //   }\n    // }\n  }\n</style>\n\n<template>\n  <div class=\"cape-authentication-login\">\n\n    <!-- Panel -->\n\n    <div class=\"panel\">\n      <div class=\"panel-inner\">\n\n        <!-- Header -->\n\n        <div class=\"panel-header\">\n          <h4 class=\"primary\">Welcome!</h4>\n          <h4 class=\"secondary\">Sign in to use your account.</h4>\n        </div>\n\n        <!-- End header -->\n\n        <!-- Alerts -->\n\n        <template v-if=\"hasOAuthError\">\n          <div class=\"alert alert-danger text-center\">\n            {{ OAUTH_ERROR }}\n          </div>\n        </template>\n        <template v-if=\"error !== ''\">\n          <div class=\"alert alert-danger text-center\">\n            {{ error }}\n          </div>\n        </template>\n        <template v-if=\"redirect\">\n          <div class=\"alert alert-success text-center\">\n            Redirecting to dashboard\n          </div>\n        </template>\n\n        <!-- End alerts -->\n\n        <!-- Body -->\n\n        <div class=\"panel-body\">\n          <div class=\"form-group\">\n            <input\n              v-model=\"login\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Username\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              v-model=\"password\"\n              v-on:keyup.enter=\"submit\"\n              type=\"password\"\n              class=\"form-control\"\n              placeholder=\"Password\">\n          </div>\n          <!--\n          <div class=\"form-group text-right\">\n            <a\n              href=\"#/recover\"\n              class=\"link link-primary\">Forgot your password?</a>\n          </div>\n          -->\n          <button\n            v-on:click=\"submit\"\n            v-bind:disabled=\"progress\"\n            type=\"submit\"\n            class=\"btn btn-block btn-primary\">\n            <template v-if=\"!progress\">\n              Login\n            </template>\n            <template v-else>\n              <i class=\"fa fa-circle-o-notch fa-spin\" aria-hidden=\"true\"></i>\n            </template>\n          </button>\n        </div>\n\n        <!-- End body -->\n\n      </div>\n    </div>\n\n    <!-- End panel -->\n\n    <!-- Footer -->\n\n    <div class=\"footer\">\n      <p>\n        Don't have an account?\n        <a href=\"#/register\" class=\"link link-primary\">Sign up</a>\n      </p>\n    </div>\n\n    <!-- End footer -->\n\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport client from '@/client.js'\nimport configuration from '@/configuration.js'\n\nconst OAUTH_ERROR = 'We were unable to log you in.'\n\nexport default {\n\n  data: function () {\n    return {\n      OAUTH_ERROR: OAUTH_ERROR,\n      login: '',\n      password: '',\n      progress: false,\n      error: '',\n      redirect: false\n    }\n  },\n\n  computed: {\n    hasOAuthError () {\n      if (_.has(this.$route, 'params.error')) {\n        return this.$route.params.error\n      }\n      return false\n    }\n  },\n\n  methods: {\n    submit: function () {\n      client.authentication.login({\n        username: this.login,\n        password: this.password\n      }, _.bind(function (error, data) {\n        this.progress = false\n        if (error) {\n          this.error = error.message\n          return\n        }\n        this.redirect = true\n        if (configuration.authentication.login.redirectURL) {\n          window.location.href = configuration.authentication.login.redirectURL\n        }\n      }, this))\n      this.progress = true\n      this.error = ''\n      this.redirect = false\n    },\n    social (option) {\n      const successRedirectURL = configuration.authentication.oauth.success.redirectURL\n      const errorRedirectURL = configuration.authentication.oauth.error.redirectURL\n      if (!(successRedirectURL && errorRedirectURL)) {\n        return\n      }\n      switch (option) {\n        case 'facebook':\n          client.authentication.platform.facebook.login({\n            successRedirectURL: successRedirectURL,\n            errorRedirectURL: errorRedirectURL\n          })\n          break\n        case 'google':\n          client.authentication.platform.google.login({\n            successRedirectURL: successRedirectURL,\n            errorRedirectURL: errorRedirectURL\n          })\n          break\n      }\n    },\n    api: function () {\n      return client\n    }\n  }\n\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Login.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cape-authentication-recover\"},[_c('div',{staticClass:\"panel\"},[_c('p',{staticClass:\"placeholder\"},[_vm._v(\"Recover content to be added here.\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-620fbf7f\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Recover.vue\n// module id = uj/z\n// module chunks = 0","import _ from 'lodash'\nimport client from '@/client'\nimport configuration from '@/configuration'\nimport URI from 'urijs'\n\nclient.user.token.query.get(function (error, data) {\n  if (!error && configuration.authentication.login.redirectURL) {\n    const uri = new URI()\n    const query = uri.search(true)\n    if (_.has(query, 'redirect_uri') && _.has(query, 'account_linking_token')) {\n      window.location.href = configuration.authentication.login.redirectURL + '?redirect_uri=' + query.redirect_uri + '&account_linking_token=' + query.account_linking_token\n    } else {\n      window.location.href = configuration.authentication.login.redirectURL\n    }\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/redirect.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cape\"] = factory();\n\telse\n\t\troot[\"cape\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bind = __webpack_require__(6);\nvar isBuffer = __webpack_require__(18);\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object' && !isArray(obj)) {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the value at `key`, unless `key` is \"__proto__\".\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function safeGet(object, key) {\n    return key == '__proto__'\n      ? undefined\n      : object[key];\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14), __webpack_require__(15)(module)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable no-proto */\n\n// Custom error that works on IE ( :) ).\n// Solution taken from:\n// https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\nfunction ClientError(message, type) {\n  var instance = new Error(message);\n  instance.type = type;\n  Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n  return instance;\n}\n\nClientError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(ClientError, Error);\n} else {\n  ClientError.__proto__ = Error;\n}\n\n// Build error from library preset\nClientError.fromObject = function (fields) {\n  return new ClientError(fields.message, fields.type);\n};\n\n// Error preset library to\n// be used with \"fromObject\"\nClientError.library = {\n  timeout: {\n    message: 'Timeout value exceeded. Please try again later.',\n    type: 'timeout'\n  },\n  unknown: {\n    message: 'An unknown error occured. Please try again later.',\n    type: 'unknown'\n  },\n  failedConnection: {\n    message: 'Unable to connect to backend. Please run a cape-webservices instance or connect to an existing one. Then specify your backend using the URL paramater: http://yourfrontend.com/?configuration={\"api\": {\"backendURL\": \"http://yourbackend.com:5050\",\"timeout\":15000} }',\n    type: 'failedConnection'\n  },\n  malformedResponse: {\n    message: 'Malformed response.',\n    type: 'malformedResponse'\n  },\n  notFound: {\n    message: 'Not found.',\n    type: 'notFound'\n  },\n  server: {\n    message: '',\n    type: 'server'\n  }\n};\n\nexports.default = ClientError;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _configuration = __webpack_require__(12);\n\nvar _configuration2 = _interopRequireDefault(_configuration);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *\n * API path & method map\n *\n */\n\nvar METHOD_GET = 'get';\nvar METHOD_POST = 'post';\n\nexports.default = {\n  // Authentication\n  authentication: {\n    register: {\n      path: '/user/create-user',\n      method: METHOD_GET\n    },\n    login: {\n      path: '/user/login',\n      method: METHOD_GET\n    },\n    logout: {\n      path: '/user/logout',\n      method: METHOD_GET\n    },\n    platform: {\n      facebook: {\n        login: {\n          path: '/user/facebook-oauth2callback',\n          method: METHOD_POST\n        }\n      },\n      google: {\n        login: {\n          path: '/user/google-oauth2callback',\n          method: METHOD_POST\n        }\n      }\n    }\n  },\n  // User\n  user: {\n    plan: {\n      set: {\n        path: '/user/set-plan',\n        method: METHOD_POST\n      }\n    },\n    profile: {\n      get: {\n        path: '/user/get-profile',\n        method: METHOD_GET\n      }\n    },\n    threshold: {\n      get: {\n        path: '/user/get-default-threshold',\n        method: METHOD_GET\n      },\n      set: {\n        path: '/user/set-default-threshold',\n        method: METHOD_POST\n      }\n    },\n    forwardEmail: {\n      set: {\n        path: '/user/set-forward-email',\n        method: METHOD_POST\n      }\n    },\n    token: {\n      query: {\n        get: {\n          path: '/user/get-user-token',\n          method: METHOD_GET\n        }\n      },\n      admin: {\n        get: {\n          path: '/user/get-admin-token',\n          method: METHOD_GET\n        }\n      }\n    },\n    terms: {\n      agree: {\n        path: '/user/set-terms-agreed',\n        method: METHOD_POST\n      }\n    },\n    onboarding: {\n      complete: {\n        path: '/user/set-onboarding-completed',\n        method: METHOD_POST\n      }\n    },\n    statistics: {\n      get: {\n        path: '/user/stats',\n        method: METHOD_GET\n      }\n    }\n  },\n  // Inbox\n  inbox: {\n    paginate: {\n      path: '/inbox/get-inbox',\n      method: METHOD_POST\n    },\n    markAsRead: {\n      path: '/inbox/mark-inbox-read',\n      method: METHOD_POST\n    },\n    archive: {\n      path: '/inbox/archive-inbox',\n      method: METHOD_POST\n    }\n  },\n  // Reply\n  reply: {\n    paginate: {\n      path: '/saved-replies/get-saved-replies',\n      method: METHOD_POST\n    },\n    create: {\n      path: '/saved-replies/add-saved-reply',\n      method: METHOD_POST\n    },\n    read: {\n      path: '/saved-replies/get-saved-replies',\n      method: METHOD_POST\n    },\n    delete: {\n      path: '/saved-replies/delete-saved-reply',\n      method: METHOD_POST\n    },\n    scrape: {\n      path: '/saved-replies/scrape',\n      method: METHOD_POST\n    },\n    question: {\n      paraphrase: {\n        create: {\n          path: '/saved-replies/add-paraphrase-question',\n          method: METHOD_POST\n        },\n        update: {\n          path: '/saved-replies/edit-paraphrase-question',\n          method: METHOD_POST\n        },\n        delete: {\n          path: '/saved-replies/delete-paraphrase-question',\n          method: METHOD_POST\n        }\n      },\n      canonical: {\n        update: {\n          path: '/saved-replies/edit-canonical-question',\n          method: METHOD_POST\n        }\n      }\n    },\n    answer: {\n      create: {\n        path: '/saved-replies/add-answer',\n        method: METHOD_POST\n      },\n      update: {\n        path: '/saved-replies/edit-answer',\n        method: METHOD_POST\n      },\n      delete: {\n        path: '/saved-replies/delete-answer',\n        method: METHOD_POST\n      }\n    }\n  },\n  // Document\n  document: {\n    paginate: {\n      path: '/documents/get-documents',\n      method: METHOD_POST\n    },\n    create: {\n      path: '/documents/add-document',\n      method: METHOD_POST\n    },\n    read: {\n      path: '/documents/get-documents',\n      method: METHOD_POST\n    },\n    delete: {\n      path: '/documents/delete-document',\n      method: METHOD_POST\n    }\n  },\n  // Query\n  query: {\n    paginate: {\n      path: '/answer',\n      method: METHOD_POST\n    }\n  },\n  // Annotation\n  annotation: {\n    paginate: {\n      path: '/annotations/get-annotations',\n      method: METHOD_POST\n    },\n    create: {\n      path: '/annotations/add-annotation',\n      method: METHOD_POST\n    },\n    delete: {\n      path: '/annotations/delete-annotation',\n      method: METHOD_POST\n    },\n    question: {\n      paraphrase: {\n        create: {\n          path: '/annotations/add-paraphrase-question',\n          method: METHOD_POST\n        },\n        update: {\n          path: '/annotations/edit-paraphrase-question',\n          method: METHOD_POST\n        },\n        delete: {\n          path: '/annotations/delete-paraphrase-question',\n          method: METHOD_POST\n        }\n      },\n      canonical: {\n        update: {\n          path: '/annotations/edit-canonical-question',\n          method: METHOD_POST\n        }\n      }\n    },\n    answer: {\n      create: {\n        path: '/annotations/add-answer',\n        method: METHOD_POST\n      },\n      update: {\n        path: '/annotations/edit-answer',\n        method: METHOD_POST\n      },\n      delete: {\n        path: '/annotations/delete-answer',\n        method: METHOD_POST\n      }\n    }\n  },\n  // Log\n  log: {\n    event: {\n      path: '/logEvent',\n      method: METHOD_POST\n    }\n  }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Resource = function () {\n  function Resource(client, model) {\n    _classCallCheck(this, Resource);\n\n    this._client = client;\n    this._model = model;\n  }\n\n  // _request generates requests calling the\n  // callback and passing the right arguments to it.\n\n\n  _createClass(Resource, [{\n    key: '_request',\n    value: function _request(options, callback) {\n      var configuration = _lodash2.default.defaults(options, {\n        method: 'GET',\n        path: undefined,\n        parameters: undefined,\n        data: undefined,\n        headers: undefined\n      });\n      // token authentication\n      if (_lodash2.default.has(this._client.configuration, 'token.admin')) {\n        configuration.parameters = _lodash2.default.extend(configuration.parameters, {\n          adminToken: this._client.configuration.token.admin\n        });\n      }\n      if (_lodash2.default.has(this._client.configuration, 'token.query')) {\n        configuration.parameters = _lodash2.default.extend(configuration.parameters, {\n          token: this._client.configuration.token.query\n        });\n      }\n      // use the configured axios\n      // instance found on client\n      this._client._axios.request({\n        method: configuration.method,\n        url: configuration.path,\n        params: configuration.parameters,\n        data: configuration.data,\n        headers: configuration.headers,\n        withCredentials: true\n      }).then(function (response) {\n        // real success callback\n        if (_lodash2.default.has(response, 'data.success') && _lodash2.default.has(response, 'data.result') && response.data.success) {\n          callback(null, response.data.result);\n          return;\n        }\n        // error (unsuccessful) server response with message\n        if (_lodash2.default.has(response, 'data.success') && _lodash2.default.has(response, 'data.result.message') && !response.data.success) {\n          callback(_Error2.default.fromObject({\n            type: _Error2.default.library.server.type,\n            message: response.data.result.message\n          }), null);\n          return;\n        }\n        // unknown error\n        callback(_Error2.default.fromObject(_Error2.default.library.unknown), null);\n      }).catch(function (error) {\n        if (_lodash2.default.has(error, 'code') && error.code === 'ECONNABORTED') {\n          // timeout error\n          callback(_Error2.default.fromObject(_Error2.default.library.timeout), null);\n        } else if (_lodash2.default.has(error, 'response')) {\n          // request made but server responded with status\n          // code that falls out of the range of 2xx\n          if (_lodash2.default.has(error.response, 'data.result.message')) {\n            callback(_Error2.default.fromObject({\n              type: _Error2.default.library.server.type,\n              message: error.response.data.result.message\n            }), null);\n            return;\n          }\n          // unknown error\n          callback(_Error2.default.fromObject(_Error2.default.library.failedConnection), null);\n        } else if (_lodash2.default.has(error, 'request')) {\n          // request made but no response was received\n          callback(_Error2.default.fromObject(_Error2.default.library.unknown), null);\n        } else {\n          // something else happened\n          callback(_Error2.default.fromObject(_Error2.default.library.unknown), null);\n        }\n      });\n    }\n  }]);\n\n  return Resource;\n}();\n\nexports.default = Resource;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(0);\nvar normalizeHeaderName = __webpack_require__(20);\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(8);\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(8);\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(0);\nvar settle = __webpack_require__(21);\nvar buildURL = __webpack_require__(23);\nvar parseHeaders = __webpack_require__(24);\nvar isURLSameOrigin = __webpack_require__(25);\nvar createError = __webpack_require__(9);\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(26);\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(27);\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar enhanceError = __webpack_require__(22);\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  backend: {\n    url: 'http://localhost:5050/api/0.1' // Modified automatically at release\n  },\n  frontend: {\n    url: 'http://localhost:8080' // Modified automatically at release\n  },\n  mock: {\n    full: {\n      url: 'http://localhost:8080/mock/full/api/0.1' // Modified automatically at release\n    },\n    unlucky: {\n      url: 'http://localhost:8080/mock/unlucky/api/0.1' // Modified automatically at release\n    },\n    error: {\n      url: 'http://localhost:8080/mock/error/api/0.1' // Modified automatically at release\n    },\n    timeout: {\n      url: 'http://localhost:8080/mock/timeout/api/0.1' // Modified automatically at release\n    }\n  }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _axios = __webpack_require__(16);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _configuration = __webpack_require__(12);\n\nvar _configuration2 = _interopRequireDefault(_configuration);\n\nvar _constants = __webpack_require__(35);\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nvar _Authentication = __webpack_require__(36);\n\nvar _Authentication2 = _interopRequireDefault(_Authentication);\n\nvar _Document = __webpack_require__(37);\n\nvar _Document2 = _interopRequireDefault(_Document);\n\nvar _Inbox = __webpack_require__(38);\n\nvar _Inbox2 = _interopRequireDefault(_Inbox);\n\nvar _Query = __webpack_require__(39);\n\nvar _Query2 = _interopRequireDefault(_Query);\n\nvar _Reply = __webpack_require__(40);\n\nvar _Reply2 = _interopRequireDefault(_Reply);\n\nvar _User = __webpack_require__(41);\n\nvar _User2 = _interopRequireDefault(_User);\n\nvar _Annotation = __webpack_require__(42);\n\nvar _Annotation2 = _interopRequireDefault(_Annotation);\n\nvar _Log = __webpack_require__(43);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// List of resources that the API exposes\nvar resources = {\n  authentication: _Authentication2.default,\n  document: _Document2.default,\n  inbox: _Inbox2.default,\n  query: _Query2.default,\n  reply: _Reply2.default,\n  user: _User2.default,\n  annotation: _Annotation2.default,\n  log: _Log2.default\n\n  // Default API configuration\n};var defaultConfiguration = {\n  backendURL: _configuration2.default.backend.url,\n  timeout: 60000\n\n  // Client class\n};\nvar Client = function () {\n  function Client(configuration) {\n    _classCallCheck(this, Client);\n\n    this._configuration = null;\n    this._axios = null;\n    this.configuration = configuration;\n    this._setupResources();\n  }\n  // configuration setter\n  // once a new value is received, it is merged\n  // with the default one and a new instance of\n  // axios is generated\n\n\n  _createClass(Client, [{\n    key: '_setupResources',\n\n    // _setupResources iterates over the listed resources,\n    // intantiates them passing a reference to this object\n    // and defines a property where the resource can be\n    // accessed from\n    value: function _setupResources() {\n      var Resource = null;\n      for (var key in resources) {\n        Resource = resources[key];\n        this[key] = new Resource(this);\n      }\n    }\n  }, {\n    key: 'configuration',\n    set: function set(value) {\n      this._configuration = _lodash2.default.defaultsDeep(value, defaultConfiguration);\n      this._axios = _axios2.default.create({\n        baseURL: this._configuration.backendURL,\n        timeout: this._configuration.timeout,\n        withCredentials: true\n      });\n    }\n    // configuration getter\n    ,\n    get: function get() {\n      return this._configuration;\n    }\n  }]);\n\n  return Client;\n}();\n\n// Expose constants\n\n\n_lodash2.default.extend(Client, constants);\n\n// Expose ClientError class\nClient.Error = _Error2.default;\n\nexports.default = Client;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(17);\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar bind = __webpack_require__(6);\nvar Axios = __webpack_require__(19);\nvar defaults = __webpack_require__(5);\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(11);\naxios.CancelToken = __webpack_require__(33);\naxios.isCancel = __webpack_require__(10);\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(34);\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(5);\nvar utils = __webpack_require__(0);\nvar InterceptorManager = __webpack_require__(28);\nvar dispatchRequest = __webpack_require__(29);\nvar isAbsoluteURL = __webpack_require__(31);\nvar combineURLs = __webpack_require__(32);\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n  config.method = config.method.toLowerCase();\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar createError = __webpack_require__(9);\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar transformData = __webpack_require__(30);\nvar isCancel = __webpack_require__(10);\nvar defaults = __webpack_require__(5);\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Cancel = __webpack_require__(11);\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * API constant values\n */\n\n// Threshold values\nvar THRESHOLD_VERY_LOW = exports.THRESHOLD_VERY_LOW = 'verylow';\nvar THRESHOLD_LOW = exports.THRESHOLD_LOW = 'low';\nvar THRESHOLD_MEDIUM = exports.THRESHOLD_MEDIUM = 'medium';\nvar THRESHOLD_HIGH = exports.THRESHOLD_HIGH = 'high';\nvar THRESHOLD_VERY_HIGH = exports.THRESHOLD_VERY_HIGH = 'veryhigh';\n\n// Source values\nvar SOURCE_ALL = exports.SOURCE_ALL = 'all';\nvar SOURCE_REPLY = exports.SOURCE_REPLY = 'saved_reply';\nvar SOURCE_DOCUMENT = exports.SOURCE_DOCUMENT = 'document';\n\n// Mode values\nvar MODE_BALANCED = exports.MODE_BALANCED = 'balanced';\nvar MODE_SPEED = exports.MODE_SPEED = 'speed';\nvar MODE_ACCURATE = exports.MODE_ACCURATE = 'accuracy';\n\n// Plan values\nvar PLAN_FREE = exports.PLAN_FREE = 'free';\nvar PLAN_BASIC = exports.PLAN_BASIC = 'basic';\nvar PLAN_PRO = exports.PLAN_PRO = 'pro';\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource3 = __webpack_require__(4);\n\nvar _Resource4 = _interopRequireDefault(_Resource3);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Platform resource\n *\n */\n\nvar Platform = function (_Resource) {\n  _inherits(Platform, _Resource);\n\n  function Platform() {\n    _classCallCheck(this, Platform);\n\n    return _possibleConstructorReturn(this, (Platform.__proto__ || Object.getPrototypeOf(Platform)).apply(this, arguments));\n  }\n\n  _createClass(Platform, [{\n    key: 'register',\n\n    // register redirects the user to\n    // the platform authorization\n    // screen\n    value: function register(fields) {\n      var _fieldToInputNameMap;\n\n      // make sure we're in a browser\n      if (!document) {\n        return;\n      }\n      var options = this._model.register;\n      if (!options) {\n        return;\n      }\n      // constants\n      var FIELD_SUCCESS = 'successRedirectURL';\n      var FIELD_ERROR = 'errorRedirectURL';\n      // pick only known fields\n      fields = _lodash2.default.pick(fields, [FIELD_SUCCESS, FIELD_ERROR]);\n      // form\n      var url = this._client.configuration.backendURL + options.path;\n      var form = document.createElement('form');\n      form.setAttribute('method', options.method);\n      form.setAttribute('action', url);\n      // inputs\n      var fieldToInputNameMap = (_fieldToInputNameMap = {}, _defineProperty(_fieldToInputNameMap, FIELD_SUCCESS, 'successCallback'), _defineProperty(_fieldToInputNameMap, FIELD_ERROR, 'errorCallback'), _fieldToInputNameMap);\n      var inputName = '';\n      var inputValue = '';\n      var input = null;\n      for (var key in fields) {\n        inputName = fieldToInputNameMap[key];\n        inputValue = fields[key];\n        input = document.createElement('input');\n        input.setAttribute('type', 'hidden');\n        input.setAttribute('name', inputName);\n        input.setAttribute('value', inputValue);\n        form.appendChild(input);\n      }\n      document.body.appendChild(form);\n      form.submit();\n    }\n\n    // login redirects the user to\n    // the platform authorization\n    // screen\n\n  }, {\n    key: 'login',\n    value: function login(fields) {\n      var _fieldToInputNameMap2;\n\n      // make sure we're in a browser\n      if (!document) {\n        return;\n      }\n      var options = this._model.login;\n      if (!options) {\n        return;\n      }\n      // constants\n      var FIELD_SUCCESS = 'successRedirectURL';\n      var FIELD_ERROR = 'errorRedirectURL';\n      // pick only known fields\n      fields = _lodash2.default.pick(fields, [FIELD_SUCCESS, FIELD_ERROR]);\n      // form\n      var url = this._client.configuration.backendURL + options.path;\n      var form = document.createElement('form');\n      form.setAttribute('method', options.method);\n      form.setAttribute('action', url);\n      // inputs\n      var fieldToInputNameMap = (_fieldToInputNameMap2 = {}, _defineProperty(_fieldToInputNameMap2, FIELD_SUCCESS, 'successCallback'), _defineProperty(_fieldToInputNameMap2, FIELD_ERROR, 'errorCallback'), _fieldToInputNameMap2);\n      var inputName = '';\n      var inputValue = '';\n      var input = null;\n      for (var key in fields) {\n        inputName = fieldToInputNameMap[key];\n        inputValue = fields[key];\n        input = document.createElement('input');\n        input.setAttribute('type', 'hidden');\n        input.setAttribute('name', inputName);\n        input.setAttribute('value', inputValue);\n        form.appendChild(input);\n      }\n      document.body.appendChild(form);\n      form.submit();\n    }\n  }]);\n\n  return Platform;\n}(_Resource4.default);\n\n/**\n *\n * Authentication resource\n *\n */\n\nvar Authentication = function (_Resource2) {\n  _inherits(Authentication, _Resource2);\n\n  // constructor\n  function Authentication(client) {\n    _classCallCheck(this, Authentication);\n\n    var _this2 = _possibleConstructorReturn(this, (Authentication.__proto__ || Object.getPrototypeOf(Authentication)).call(this, client, _map2.default.authentication));\n\n    _this2._setupPlatform(client);\n    return _this2;\n  }\n  // _setupPlatform declares a \"platform\" property\n  // that enable accessing different platforms\n\n\n  _createClass(Authentication, [{\n    key: '_setupPlatform',\n    value: function _setupPlatform(client) {\n      var _this3 = this;\n\n      var collection = this._model.platform;\n      if (!collection) {\n        return;\n      }\n      this.platform = {};\n      _lodash2.default.each(collection, function (model, key) {\n        _this3.platform[key] = new Platform(client, model);\n      });\n    }\n    // register attempts to create a user account using the provided fields\n\n  }, {\n    key: 'register',\n    value: function register(fields, callback) {\n      var method = this._model.register.method;\n      var path = this._model.register.path;\n      fields = _lodash2.default.pick(fields, ['username', 'password', 'superadmintoken']);\n      var options = {\n        method: method,\n        path: path,\n        parameters: {\n          userId: fields.username,\n          password: fields.password,\n          superAdminToken: fields.superadmintoken\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'username')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // login attempts to sign in\n    // a user using the provided\n    // fields\n\n  }, {\n    key: 'login',\n    value: function login(fields, callback) {\n      var method = this._model.login.method;\n      var path = this._model.login.path;\n      fields = _lodash2.default.pick(fields, ['username', 'password']);\n      var options = {\n        method: method,\n        path: path,\n        parameters: {\n          login: fields.username,\n          password: fields.password\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'message') && _lodash2.default.has(data, 'sessionId') && _lodash2.default.has(data, 'adminToken')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // logout signs the user out\n    // of the application\n\n  }, {\n    key: 'logout',\n    value: function logout(callback) {\n      var options = this._model.logout;\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'message')) {\n            callback(null, data.message);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Authentication;\n}(_Resource4.default);\n\nexports.default = Authentication;\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource2 = __webpack_require__(4);\n\nvar _Resource3 = _interopRequireDefault(_Resource2);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global FormData */\n\n/**\n *\n * Document resource\n *\n */\n\nvar Document = function (_Resource) {\n  _inherits(Document, _Resource);\n\n  // constructor\n  function Document(client) {\n    _classCallCheck(this, Document);\n\n    return _possibleConstructorReturn(this, (Document.__proto__ || Object.getPrototypeOf(Document)).call(this, client, _map2.default.document));\n  }\n  // paginate returns paged\n  // document records\n\n\n  _createClass(Document, [{\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var _$defaults;\n\n      // pick known fields and\n      // specify default values\n      var FIELD_SEARCH = 'search';\n      var FIELD_SIZE = 'size';\n      var FIELD_NUMBER = 'number';\n      fields = _lodash2.default.defaults(_lodash2.default.pick(fields, [FIELD_SEARCH, FIELD_SIZE, FIELD_NUMBER]), (_$defaults = {}, _defineProperty(_$defaults, FIELD_SEARCH, ''), _defineProperty(_$defaults, FIELD_SIZE, 30), _defineProperty(_$defaults, FIELD_NUMBER, 0), _$defaults));\n      // options\n      var options = _lodash2.default.extend({\n        data: {\n          'searchTerm': fields[FIELD_SEARCH],\n          'numberOfItems': fields[FIELD_SIZE],\n          'offset': fields[FIELD_SIZE] * fields[FIELD_NUMBER]\n        }\n      }, this._model.paginate);\n      // request\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // create stores a\n    // new document\n\n  }, {\n    key: 'create',\n    value: function create(fields, callback) {\n      // pick known fields\n      var FIELD_ID = 'id';\n      var FIELD_TITLE = 'title';\n      var FIELD_ORIGIN = 'origin';\n      var FIELD_CONTENT = 'content';\n      var FIELD_FILE = 'file';\n      var FIELD_REPLACE = 'replace';\n      fields = _lodash2.default.pick(fields, [FIELD_ID, FIELD_TITLE, FIELD_ORIGIN, FIELD_CONTENT, FIELD_FILE, FIELD_REPLACE]);\n      // type\n      var TYPE_TEXT = 'text';\n      var TYPE_FILE = 'file';\n      // headers & data\n      var headers = void 0;\n      var data = {\n        'documentId': fields[FIELD_ID],\n        'title': fields[FIELD_TITLE],\n        'origin': fields[FIELD_ORIGIN],\n        'replace': fields[FIELD_REPLACE]\n      };\n      if (_lodash2.default.has(fields, FIELD_CONTENT)) {\n        data.type = TYPE_TEXT;\n        data.text = fields[FIELD_CONTENT];\n      } else if (_lodash2.default.has(fields, FIELD_FILE)) {\n        data.type = TYPE_FILE;\n        var formData = new FormData();\n        _lodash2.default.each(data, function (value, key) {\n          if (value) {\n            formData.append(key, value);\n          }\n        });\n        var file = fields[FIELD_FILE];\n        if (file.name) {\n          formData.append('file', file, file.name);\n        } else {\n          formData.append('file', file);\n        }\n        data = formData;\n        headers = {\n          'Content-Type': 'multipart/form-data'\n        };\n      }\n      // options\n      var options = _lodash2.default.extend({\n        data: data,\n        headers: headers\n      }, this._model.create);\n      // request\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'documentId')) {\n            callback(null, data.documentId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // read returns a document\n\n  }, {\n    key: 'read',\n    value: function read(id, callback) {\n      var method = this._model.read.method;\n      var path = this._model.read.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          documentIds: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items') && _lodash2.default.isArray(data.items)) {\n            if (data.totalItems === 1 && data.items.length === 1) {\n              callback(null, data.items[0]);\n            } else {\n              callback(_Error2.default.fromObject(_Error2.default.library.notFound), null);\n            }\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes\n    // a document\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var options = _lodash2.default.extend({\n        data: {\n          'documentId': id\n        }\n      }, this._model.delete);\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'documentId')) {\n            callback(null, data.documentId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Document;\n}(_Resource3.default);\n\nexports.default = Document;\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource2 = __webpack_require__(4);\n\nvar _Resource3 = _interopRequireDefault(_Resource2);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Inbox resource\n *\n */\n\nvar Inbox = function (_Resource) {\n  _inherits(Inbox, _Resource);\n\n  // constructor\n  function Inbox(client) {\n    _classCallCheck(this, Inbox);\n\n    return _possibleConstructorReturn(this, (Inbox.__proto__ || Object.getPrototypeOf(Inbox)).call(this, client, _map2.default.inbox));\n  }\n  // paginate returns\n  // paged inbox records\n\n\n  _createClass(Inbox, [{\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var method = this._model.paginate.method;\n      var path = this._model.paginate.path;\n      fields = _lodash2.default.pick(fields, ['read', 'answered', 'search', 'size', 'number']);\n      fields = _lodash2.default.defaults(fields, {\n        read: 'both',\n        answered: 'both',\n        search: '',\n        size: 30,\n        number: 0\n      });\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          read: fields.read,\n          answered: fields.answered,\n          searchTerm: fields.search,\n          numberOfItems: fields.size,\n          offset: fields.size * fields.number\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // markAsRead\n\n  }, {\n    key: 'markAsRead',\n    value: function markAsRead(id, callback) {\n      var method = this._model.markAsRead.method;\n      var path = this._model.markAsRead.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          inboxId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'inboxId')) {\n            callback(null, data.inboxId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // archive\n\n  }, {\n    key: 'archive',\n    value: function archive(id, callback) {\n      var method = this._model.archive.method;\n      var path = this._model.archive.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          inboxId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'inboxId')) {\n            callback(null, data.inboxId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Inbox;\n}(_Resource3.default);\n\nexports.default = Inbox;\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource3 = __webpack_require__(4);\n\nvar _Resource4 = _interopRequireDefault(_Resource3);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Launcher = function (_Resource) {\n  _inherits(Launcher, _Resource);\n\n  // constructor\n  function Launcher(client, model, fields) {\n    _classCallCheck(this, Launcher);\n\n    var _this = _possibleConstructorReturn(this, (Launcher.__proto__ || Object.getPrototypeOf(Launcher)).call(this, client, model));\n\n    _this._fields = fields;\n    return _this;\n  }\n  // paginate\n\n\n  _createClass(Launcher, [{\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var method = this._model.paginate.method;\n      var path = this._model.paginate.path;\n      fields = _lodash2.default.pick(fields, ['size', 'number']);\n      fields = _lodash2.default.defaults(fields, {\n        size: 1,\n        number: 0\n      });\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          question: this._fields.content,\n          text: this._fields.target,\n          threshold: this._fields.threshold,\n          documentIds: this._fields.documentIDs,\n          sourceType: this._fields.source,\n          speedOrAccuracy: this._fields.mode,\n          numberOfItems: fields.size,\n          offset: fields.size * fields.number\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'items')) {\n            callback(null, data.items);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Launcher;\n}(_Resource4.default);\n\nvar Query = function (_Resource2) {\n  _inherits(Query, _Resource2);\n\n  // constructor\n  function Query(client) {\n    _classCallCheck(this, Query);\n\n    return _possibleConstructorReturn(this, (Query.__proto__ || Object.getPrototypeOf(Query)).call(this, client, _map2.default.query));\n  }\n  // prepare stores strictly\n  // query related fields\n\n\n  _createClass(Query, [{\n    key: 'prepare',\n    value: function prepare(fields) {\n      fields = _lodash2.default.pick(fields, ['target', 'content', 'threshold', 'documentIDs', 'source', 'mode']);\n      return new Launcher(this._client, this._model, fields);\n    }\n  }]);\n\n  return Query;\n}(_Resource4.default);\n\nQuery.Launcher = Launcher;\n\nexports.default = Query;\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource4 = __webpack_require__(4);\n\nvar _Resource5 = _interopRequireDefault(_Resource4);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Question\n *\n */\n\nvar Question = function (_Resource) {\n  _inherits(Question, _Resource);\n\n  function Question() {\n    _classCallCheck(this, Question);\n\n    return _possibleConstructorReturn(this, (Question.__proto__ || Object.getPrototypeOf(Question)).apply(this, arguments));\n  }\n\n  _createClass(Question, [{\n    key: 'create',\n\n    // create stores\n    // a new question\n    value: function create(fields, callback) {\n      if (!this._model.create) {\n        return;\n      }\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['replyID', 'content']);\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          replyId: fields.replyID,\n          question: fields.content\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'questionId')) {\n            callback(null, data.questionId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // update stores\n    // question changes\n\n  }, {\n    key: 'update',\n    value: function update(fields, callback) {\n      var method = this._model.update.method;\n      var path = this._model.update.path;\n      fields = _lodash2.default.pick(fields, ['id', 'replyID', 'content']);\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          questionId: fields.id,\n          replyId: fields.replyID,\n          question: fields.content\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          var interests = ['questionId', 'replyId'];\n          var interest = '';\n          var found = false;\n          for (var i = 0; i < interests.length; i++) {\n            interest = interests[i];\n            if (_lodash2.default.has(data, interest)) {\n              found = true;\n              break;\n            }\n          }\n          if (found) {\n            callback(null, data[interest]);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes\n    // a question\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      if (!this._model.delete) {\n        return;\n      }\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          questionId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'questionId')) {\n            callback(null, data.questionId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Question;\n}(_Resource5.default);\n\n/**\n *\n * Answer\n *\n */\n\nvar Answer = function (_Resource2) {\n  _inherits(Answer, _Resource2);\n\n  function Answer() {\n    _classCallCheck(this, Answer);\n\n    return _possibleConstructorReturn(this, (Answer.__proto__ || Object.getPrototypeOf(Answer)).apply(this, arguments));\n  }\n\n  _createClass(Answer, [{\n    key: 'create',\n\n    // create stores\n    // a new answer\n    value: function create(fields, callback) {\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['replyID', 'content']);\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          replyId: fields.replyID,\n          answer: fields.content\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // update changes\n    // the answer\n\n  }, {\n    key: 'update',\n    value: function update(fields, callback) {\n      var method = this._model.update.method;\n      var path = this._model.update.path;\n      fields = _lodash2.default.pick(fields, ['id', 'content']);\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          answerId: fields.id,\n          answer: fields.content\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes\n    // an answer\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          answerId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Answer;\n}(_Resource5.default);\n\n/**\n *\n * Reply\n *\n */\n\nvar Reply = function (_Resource3) {\n  _inherits(Reply, _Resource3);\n\n  // constructor\n  function Reply(client) {\n    _classCallCheck(this, Reply);\n\n    var _this3 = _possibleConstructorReturn(this, (Reply.__proto__ || Object.getPrototypeOf(Reply)).call(this, client, _map2.default.reply));\n\n    _this3._setupQuestion();\n    _this3._setupAnswer();\n    return _this3;\n  }\n  // _setupQuestion declares a \"question\" property\n  // that enables accessing different question types\n\n\n  _createClass(Reply, [{\n    key: '_setupQuestion',\n    value: function _setupQuestion() {\n      var _this4 = this;\n\n      var collection = this._model.question;\n      if (!collection) {\n        return;\n      }\n      this.question = {};\n      _lodash2.default.each(collection, function (model, key) {\n        _this4.question[key] = new Question(_this4._client, model);\n      });\n    }\n    // _setupAnswer declares an \"answer\" property\n    // that enables accessing answer resource\n    // methods\n\n  }, {\n    key: '_setupAnswer',\n    value: function _setupAnswer() {\n      var model = this._model.answer;\n      if (!model) {\n        return;\n      }\n      this.answer = new Answer(this._client, model);\n    }\n    // paginate returns paged\n    // reply records\n\n  }, {\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var method = this._model.paginate.method;\n      var path = this._model.paginate.path;\n      fields = _lodash2.default.pick(fields, ['search', 'size', 'number']);\n      fields = _lodash2.default.defaults(fields, {\n        search: '',\n        size: 30,\n        number: 0\n      });\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          searchTerm: fields.search,\n          numberOfItems: fields.size,\n          offset: fields.size * fields.number\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // create stores a new reply\n\n  }, {\n    key: 'create',\n    value: function create(fields, callback) {\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['question', 'answer']);\n      var options = {\n        method: method,\n        path: path,\n        data: fields\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'replyId') && _lodash2.default.has(data, 'answerId')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // read returns a reply\n\n  }, {\n    key: 'read',\n    value: function read(id, callback) {\n      var method = this._model.read.method;\n      var path = this._model.read.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          savedReplyIds: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items') && _lodash2.default.isArray(data.items)) {\n            if (data.totalItems === 1 && data.items.length === 1) {\n              callback(null, data.items[0]);\n            } else {\n              callback(_Error2.default.fromObject(_Error2.default.library.notFound), null);\n            }\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes a reply\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          replyId: id\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'replyId')) {\n            callback(null, data.replyId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }, {\n    key: 'scrape',\n    value: function scrape(url, callback) {\n      var method = this._model.scrape.method;\n      var path = this._model.scrape.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          url: decodeURIComponent(url)\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'message')) {\n            callback(null, data.message);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Reply;\n}(_Resource5.default);\n\nexports.default = Reply;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource10 = __webpack_require__(4);\n\nvar _Resource11 = _interopRequireDefault(_Resource10);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Profile resource\n *\n */\n\nvar Profile = function (_Resource) {\n  _inherits(Profile, _Resource);\n\n  function Profile() {\n    _classCallCheck(this, Profile);\n\n    return _possibleConstructorReturn(this, (Profile.__proto__ || Object.getPrototypeOf(Profile)).apply(this, arguments));\n  }\n\n  _createClass(Profile, [{\n    key: 'get',\n\n    // get retrieves the\n    // profile details\n    value: function get(callback) {\n      var options = this._model.get;\n      this._request(options, function (error, data) {\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'username') && _lodash2.default.has(data, 'plan') && _lodash2.default.has(data, 'termsAgreed') && _lodash2.default.has(data, 'onboardingCompleted') && _lodash2.default.has(data, 'forwardEmail') && _lodash2.default.has(data, 'forwardEmailVerified')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Profile;\n}(_Resource11.default);\n\n/**\n *\n * Threshold resource\n *\n */\n\nvar Threshold = function (_Resource2) {\n  _inherits(Threshold, _Resource2);\n\n  function Threshold() {\n    _classCallCheck(this, Threshold);\n\n    return _possibleConstructorReturn(this, (Threshold.__proto__ || Object.getPrototypeOf(Threshold)).apply(this, arguments));\n  }\n\n  _createClass(Threshold, [{\n    key: 'get',\n\n    // get retrieves the current\n    // threshold value that is\n    // used by the user\n    value: function get(callback) {\n      var options = this._model.get;\n      this._request(options, function (error, data) {\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'threshold')) {\n            callback(null, data.threshold);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n\n    // set sets a new threshold\n    // value that should be used\n    // by the user\n\n  }, {\n    key: 'set',\n    value: function set(value, callback) {\n      var options = _lodash2.default.extend({\n        data: {\n          'threshold': value\n        }\n      }, this._model.set);\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'threshold')) {\n            callback(null, data.threshold);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Threshold;\n}(_Resource11.default);\n\n/**\n *\n * Forward email resource\n *\n */\n\nvar ForwardEmail = function (_Resource3) {\n  _inherits(ForwardEmail, _Resource3);\n\n  function ForwardEmail() {\n    _classCallCheck(this, ForwardEmail);\n\n    return _possibleConstructorReturn(this, (ForwardEmail.__proto__ || Object.getPrototypeOf(ForwardEmail)).apply(this, arguments));\n  }\n\n  _createClass(ForwardEmail, [{\n    key: 'set',\n\n    // set sets the forwarding email address\n    value: function set(value, callback) {\n      var method = this._model.set.method;\n      var path = this._model.set.path;\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          email: value\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'forwardEmail')) {\n            callback(null, data.forwardEmail);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return ForwardEmail;\n}(_Resource11.default);\n\n/**\n *\n * Token resource\n *\n */\n\nvar Token = function (_Resource4) {\n  _inherits(Token, _Resource4);\n\n  function Token() {\n    _classCallCheck(this, Token);\n\n    return _possibleConstructorReturn(this, (Token.__proto__ || Object.getPrototypeOf(Token)).apply(this, arguments));\n  }\n\n  _createClass(Token, [{\n    key: 'get',\n\n    // get retrieves the token\n    // value from the backend\n    value: function get(callback) {\n      var options = this._model.get;\n      this._request(options, function (error, data) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var interests = ['userToken', 'adminToken'];\n          var interest = '';\n          var found = false;\n          for (var i = 0; i < interests.length; i++) {\n            interest = interests[i];\n            if (_lodash2.default.has(data, interest)) {\n              found = true;\n              break;\n            }\n          }\n          if (found) {\n            callback(null, data[interest]);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Token;\n}(_Resource11.default);\n\n/**\n *\n * Plan resource\n *\n */\n\nvar Plan = function (_Resource5) {\n  _inherits(Plan, _Resource5);\n\n  function Plan() {\n    _classCallCheck(this, Plan);\n\n    return _possibleConstructorReturn(this, (Plan.__proto__ || Object.getPrototypeOf(Plan)).apply(this, arguments));\n  }\n\n  _createClass(Plan, [{\n    key: 'set',\n\n    // set sets a new plan value\n    // that should be used by the\n    // user\n    value: function set(value, callback) {\n      var method = this._model.set.method;\n      var path = this._model.set.path;\n      var options = {\n        method: method,\n        path: path,\n        data: {\n          plan: value\n        }\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'plan')) {\n            callback(null, data.plan);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Plan;\n}(_Resource11.default);\n\n/**\n *\n * Terms resource\n *\n */\n\nvar Terms = function (_Resource6) {\n  _inherits(Terms, _Resource6);\n\n  function Terms() {\n    _classCallCheck(this, Terms);\n\n    return _possibleConstructorReturn(this, (Terms.__proto__ || Object.getPrototypeOf(Terms)).apply(this, arguments));\n  }\n\n  _createClass(Terms, [{\n    key: 'agree',\n\n    // agree marks the user as having\n    // agreed to the terms & conditions\n    value: function agree(callback) {\n      var method = this._model.agree.method;\n      var path = this._model.agree.path;\n      var options = {\n        method: method,\n        path: path\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'termsAgreed')) {\n            callback(null, data.termsAgreed);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Terms;\n}(_Resource11.default);\n\n/**\n *\n * Onboarding resource\n *\n */\n\nvar Onboarding = function (_Resource7) {\n  _inherits(Onboarding, _Resource7);\n\n  function Onboarding() {\n    _classCallCheck(this, Onboarding);\n\n    return _possibleConstructorReturn(this, (Onboarding.__proto__ || Object.getPrototypeOf(Onboarding)).apply(this, arguments));\n  }\n\n  _createClass(Onboarding, [{\n    key: 'complete',\n\n    // complete marks the user as having\n    // completed the onboarding process\n    value: function complete(callback) {\n      var method = this._model.complete.method;\n      var path = this._model.complete.path;\n      var options = {\n        method: method,\n        path: path\n      };\n      this._request(options, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'onboardingCompleted')) {\n            callback(null, data.onboardingCompleted);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Onboarding;\n}(_Resource11.default);\n\n/**\n *\n * Statistics resource\n *\n */\n\nvar Statistics = function (_Resource8) {\n  _inherits(Statistics, _Resource8);\n\n  function Statistics() {\n    _classCallCheck(this, Statistics);\n\n    return _possibleConstructorReturn(this, (Statistics.__proto__ || Object.getPrototypeOf(Statistics)).apply(this, arguments));\n  }\n\n  _createClass(Statistics, [{\n    key: 'get',\n\n    // get retrieves the stats\n    value: function get(callback) {\n      var method = this._model.get.method;\n      var path = this._model.get.path;\n      this._request({\n        method: method,\n        path: path\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          callback(null, data);\n        }\n      });\n    }\n  }]);\n\n  return Statistics;\n}(_Resource11.default);\n\n/**\n *\n * User resource\n *\n */\n\nvar User = function (_Resource9) {\n  _inherits(User, _Resource9);\n\n  // constructor\n  function User(client) {\n    _classCallCheck(this, User);\n\n    var _this9 = _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this, client, _map2.default.user));\n\n    _this9._setupProfile();\n    _this9._setupThreshold();\n    _this9._setupForwardEmail();\n    _this9._setupToken();\n    _this9._setupPlan();\n    _this9._setupTerms();\n    _this9._setupOnboarding();\n    _this9._setupStatistics();\n    return _this9;\n  }\n\n  // _setupProfile declares a \"profile\" property\n  // that enables accessing profile resource methods\n\n\n  _createClass(User, [{\n    key: '_setupProfile',\n    value: function _setupProfile() {\n      var model = this._model.profile;\n      if (!model) {\n        return;\n      }\n      this.profile = new Profile(this._client, model);\n    }\n\n    // _setupThreshold declares a \"threshold\" property\n    // that facilitates acccess to the threshold resource\n\n  }, {\n    key: '_setupThreshold',\n    value: function _setupThreshold() {\n      var model = this._model.threshold;\n      if (!model) {\n        return;\n      }\n      this.threshold = new Threshold(this._client, model);\n    }\n\n    // _setupForwardEmail declares a \"forwardEmail\" property\n    // that facilitates access to the forward email resource\n\n  }, {\n    key: '_setupForwardEmail',\n    value: function _setupForwardEmail() {\n      var model = this._model.forwardEmail;\n      if (!model) {\n        return;\n      }\n      this.forwardEmail = new ForwardEmail(this._client, model);\n    }\n\n    // _setupToken declares a \"token\" property\n    // that enable accessing different token types\n\n  }, {\n    key: '_setupToken',\n    value: function _setupToken() {\n      var _this10 = this;\n\n      var collection = this._model.token;\n      if (!collection) {\n        return;\n      }\n      this.token = {};\n      _lodash2.default.each(collection, function (model, key) {\n        _this10.token[key] = new Token(_this10._client, model);\n      });\n    }\n\n    // _setupPlan declares a \"plan\" property\n    // that enables accessing the plan resource\n\n  }, {\n    key: '_setupPlan',\n    value: function _setupPlan() {\n      var model = this._model.plan;\n      if (!model) {\n        return;\n      }\n      this.plan = new Plan(this._client, model);\n    }\n\n    // _setupTerms declares a \"terms\" property\n    // that enables accessint the terms resource\n\n  }, {\n    key: '_setupTerms',\n    value: function _setupTerms() {\n      var model = this._model.terms;\n      if (!model) {\n        return;\n      }\n      this.terms = new Terms(this._client, model);\n    }\n\n    // _setupOnboarding declares a \"onboarding\" property\n    // that enables accessing the onboarding resource\n\n  }, {\n    key: '_setupOnboarding',\n    value: function _setupOnboarding() {\n      var model = this._model.onboarding;\n      if (!model) {\n        return;\n      }\n      this.onboarding = new Onboarding(this._client, model);\n    }\n\n    // _setupStatistics declares a \"statistics\" property\n    // that enables accessing the statistics resource\n\n  }, {\n    key: '_setupStatistics',\n    value: function _setupStatistics() {\n      var model = this._model.statistics;\n      if (!model) {\n        return;\n      }\n      this.statistics = new Statistics(this._client, model);\n    }\n  }]);\n\n  return User;\n}(_Resource11.default);\n\nexports.default = User;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource4 = __webpack_require__(4);\n\nvar _Resource5 = _interopRequireDefault(_Resource4);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Question\n *\n */\n\nvar Question = function (_Resource) {\n  _inherits(Question, _Resource);\n\n  function Question() {\n    _classCallCheck(this, Question);\n\n    return _possibleConstructorReturn(this, (Question.__proto__ || Object.getPrototypeOf(Question)).apply(this, arguments));\n  }\n\n  _createClass(Question, [{\n    key: 'create',\n\n    // create stores a new question\n    value: function create(fields, callback) {\n      if (!this._model.create) {\n        return;\n      }\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['annotationID', 'content']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          annotationId: fields.annotationID,\n          question: fields.content\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'questionId')) {\n            callback(null, data.questionId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // update stores question changes\n\n  }, {\n    key: 'update',\n    value: function update(fields, callback) {\n      var method = this._model.update.method;\n      var path = this._model.update.path;\n      fields = _lodash2.default.pick(fields, ['id', 'annotationID', 'content']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          questionId: fields.id,\n          annotationId: fields.annotationID,\n          question: fields.content\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          var interests = ['questionId', 'annotationId'];\n          var interest = '';\n          var found = false;\n          for (var i = 0; i < interests.length; i++) {\n            interest = interests[i];\n            if (_lodash2.default.has(data, interest)) {\n              found = true;\n              break;\n            }\n          }\n          if (found) {\n            callback(null, data[interest]);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes a question\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      if (!this._model.delete) {\n        return;\n      }\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          questionId: id\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'questionId')) {\n            callback(null, data.questionId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Question;\n}(_Resource5.default);\n\n/**\n *\n * Answer\n *\n */\n\nvar Answer = function (_Resource2) {\n  _inherits(Answer, _Resource2);\n\n  function Answer() {\n    _classCallCheck(this, Answer);\n\n    return _possibleConstructorReturn(this, (Answer.__proto__ || Object.getPrototypeOf(Answer)).apply(this, arguments));\n  }\n\n  _createClass(Answer, [{\n    key: 'create',\n\n    // create stores a new answer\n    value: function create(fields, callback) {\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['annotationID', 'content']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          annotationId: fields.annotationID,\n          answer: fields.content\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // update changes the answer\n\n  }, {\n    key: 'update',\n    value: function update(fields, callback) {\n      var method = this._model.update.method;\n      var path = this._model.update.path;\n      fields = _lodash2.default.pick(fields, ['id', 'content']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          answerId: fields.id,\n          answer: fields.content\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes an answer\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          answerId: id\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'answerId')) {\n            callback(null, data.answerId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Answer;\n}(_Resource5.default);\n\n/**\n *\n * Annotation\n *\n */\n\nvar Annotation = function (_Resource3) {\n  _inherits(Annotation, _Resource3);\n\n  // constructor\n  function Annotation(client) {\n    _classCallCheck(this, Annotation);\n\n    var _this3 = _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).call(this, client, _map2.default.annotation));\n\n    _this3._setupQuestion();\n    _this3._setupAnswer();\n    return _this3;\n  }\n  // _setupQuestion declares a \"question\" property\n  // that enables accessing different question types\n\n\n  _createClass(Annotation, [{\n    key: '_setupQuestion',\n    value: function _setupQuestion() {\n      var _this4 = this;\n\n      var collection = this._model.question;\n      if (!collection) {\n        return;\n      }\n      this.question = {};\n      _lodash2.default.each(collection, function (model, key) {\n        _this4.question[key] = new Question(_this4._client, model);\n      });\n    }\n    // _setupAnswer declares an \"answer\" property\n    // that enables accessing answer resource methods\n\n  }, {\n    key: '_setupAnswer',\n    value: function _setupAnswer() {\n      var model = this._model.answer;\n      if (!model) {\n        return;\n      }\n      this.answer = new Answer(this._client, model);\n    }\n    // paginate returns paged annotation records\n\n  }, {\n    key: 'paginate',\n    value: function paginate(fields, callback) {\n      var method = this._model.paginate.method;\n      var path = this._model.paginate.path;\n      fields = _lodash2.default.pick(fields, ['annotationIDs', 'documentIDs', 'search', 'size', 'number']);\n      fields = _lodash2.default.defaults(fields, {\n        search: '',\n        size: 5,\n        number: 0\n      });\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          annotationIds: fields.annotationIDs,\n          documentIds: fields.documentIDs,\n          searchTerm: fields.search,\n          numberOfItems: fields.size,\n          offset: fields.size * fields.number\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'totalItems') && _lodash2.default.has(data, 'items')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // create stores a new annotation\n\n  }, {\n    key: 'create',\n    value: function create(fields, callback) {\n      var method = this._model.create.method;\n      var path = this._model.create.path;\n      fields = _lodash2.default.pick(fields, ['question', 'answer', 'documentID', 'startOffset', 'endOffset', 'page', 'boundingBoxes', 'metadata']);\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          question: fields.question,\n          answer: fields.answer,\n          documentId: fields.documentID,\n          startOffset: fields.startOffset,\n          endOffset: fields.endOffset,\n          page: fields.page,\n          boundingBoxes: fields.boundingBoxes,\n          metadata: fields.metadata\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'annotationId') && _lodash2.default.has(data, 'answerId')) {\n            callback(null, data);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n    // delete removes an annotation\n\n  }, {\n    key: 'delete',\n    value: function _delete(id, callback) {\n      var method = this._model.delete.method;\n      var path = this._model.delete.path;\n      this._request({\n        method: method,\n        path: path,\n        data: {\n          annotationId: id\n        }\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          if (_lodash2.default.has(data, 'annotationId')) {\n            callback(null, data.annotationId);\n          } else {\n            callback(_Error2.default.fromObject(_Error2.default.library.malformedResponse), null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Annotation;\n}(_Resource5.default);\n\nexports.default = Annotation;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _map = __webpack_require__(3);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _Resource2 = __webpack_require__(4);\n\nvar _Resource3 = _interopRequireDefault(_Resource2);\n\nvar _Error = __webpack_require__(2);\n\nvar _Error2 = _interopRequireDefault(_Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Log = function (_Resource) {\n  _inherits(Log, _Resource);\n\n  // constructor\n  function Log(client) {\n    _classCallCheck(this, Log);\n\n    return _possibleConstructorReturn(this, (Log.__proto__ || Object.getPrototypeOf(Log)).call(this, client, _map2.default.log));\n  }\n  // event\n\n\n  _createClass(Log, [{\n    key: 'event',\n    value: function event(fields, callback) {\n      var method = this._model.event.method;\n      var path = this._model.event.path;\n      this._request({\n        method: method,\n        path: path,\n        data: fields\n      }, function (error, data) {\n        if (!callback) {\n          return;\n        }\n        if (error) {\n          callback(error, null);\n        } else {\n          callback(null, data);\n        }\n      });\n    }\n  }]);\n\n  return Log;\n}(_Resource3.default);\n\nexports.default = Log;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=cape.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../cape-client/dist/cape.js\n// module id = woyk\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-49d6518c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Login.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Login.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Login.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-49d6518c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Login.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-49d6518c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Login.vue\n// module id = xJsL\n// module chunks = 0"],"sourceRoot":""}